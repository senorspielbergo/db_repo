/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 3600000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 3600000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "maxY": 7697.0, "series": [{"data": [[0.0, 105.0], [0.1, 105.0], [0.2, 105.0], [0.3, 105.0], [0.4, 105.0], [0.5, 105.0], [0.6, 105.0], [0.7, 105.0], [0.8, 105.0], [0.9, 105.0], [1.0, 107.0], [1.1, 107.0], [1.2, 107.0], [1.3, 107.0], [1.4, 107.0], [1.5, 107.0], [1.6, 107.0], [1.7, 107.0], [1.8, 107.0], [1.9, 107.0], [2.0, 111.0], [2.1, 111.0], [2.2, 111.0], [2.3, 111.0], [2.4, 111.0], [2.5, 111.0], [2.6, 111.0], [2.7, 111.0], [2.8, 111.0], [2.9, 111.0], [3.0, 121.0], [3.1, 121.0], [3.2, 121.0], [3.3, 121.0], [3.4, 121.0], [3.5, 121.0], [3.6, 121.0], [3.7, 121.0], [3.8, 121.0], [3.9, 121.0], [4.0, 126.0], [4.1, 126.0], [4.2, 126.0], [4.3, 126.0], [4.4, 126.0], [4.5, 126.0], [4.6, 126.0], [4.7, 126.0], [4.8, 126.0], [4.9, 126.0], [5.0, 142.0], [5.1, 142.0], [5.2, 142.0], [5.3, 142.0], [5.4, 142.0], [5.5, 142.0], [5.6, 142.0], [5.7, 142.0], [5.8, 142.0], [5.9, 142.0], [6.0, 144.0], [6.1, 144.0], [6.2, 144.0], [6.3, 144.0], [6.4, 144.0], [6.5, 144.0], [6.6, 144.0], [6.7, 144.0], [6.8, 144.0], [6.9, 144.0], [7.0, 195.0], [7.1, 195.0], [7.2, 195.0], [7.3, 195.0], [7.4, 195.0], [7.5, 195.0], [7.6, 195.0], [7.7, 195.0], [7.8, 195.0], [7.9, 195.0], [8.0, 209.0], [8.1, 209.0], [8.2, 209.0], [8.3, 209.0], [8.4, 209.0], [8.5, 209.0], [8.6, 209.0], [8.7, 209.0], [8.8, 209.0], [8.9, 209.0], [9.0, 244.0], [9.1, 244.0], [9.2, 244.0], [9.3, 244.0], [9.4, 244.0], [9.5, 244.0], [9.6, 244.0], [9.7, 244.0], [9.8, 244.0], [9.9, 244.0], [10.0, 308.0], [10.1, 308.0], [10.2, 308.0], [10.3, 308.0], [10.4, 308.0], [10.5, 308.0], [10.6, 308.0], [10.7, 308.0], [10.8, 308.0], [10.9, 308.0], [11.0, 350.0], [11.1, 350.0], [11.2, 350.0], [11.3, 350.0], [11.4, 350.0], [11.5, 350.0], [11.6, 350.0], [11.7, 350.0], [11.8, 350.0], [11.9, 350.0], [12.0, 394.0], [12.1, 394.0], [12.2, 394.0], [12.3, 394.0], [12.4, 394.0], [12.5, 394.0], [12.6, 394.0], [12.7, 394.0], [12.8, 394.0], [12.9, 394.0], [13.0, 430.0], [13.1, 430.0], [13.2, 430.0], [13.3, 430.0], [13.4, 430.0], [13.5, 430.0], [13.6, 430.0], [13.7, 430.0], [13.8, 430.0], [13.9, 430.0], [14.0, 468.0], [14.1, 468.0], [14.2, 468.0], [14.3, 468.0], [14.4, 468.0], [14.5, 468.0], [14.6, 468.0], [14.7, 468.0], [14.8, 468.0], [14.9, 468.0], [15.0, 499.0], [15.1, 499.0], [15.2, 499.0], [15.3, 499.0], [15.4, 499.0], [15.5, 499.0], [15.6, 499.0], [15.7, 499.0], [15.8, 499.0], [15.9, 499.0], [16.0, 532.0], [16.1, 532.0], [16.2, 532.0], [16.3, 532.0], [16.4, 532.0], [16.5, 532.0], [16.6, 532.0], [16.7, 532.0], [16.8, 532.0], [16.9, 532.0], [17.0, 537.0], [17.1, 537.0], [17.2, 537.0], [17.3, 537.0], [17.4, 537.0], [17.5, 537.0], [17.6, 537.0], [17.7, 537.0], [17.8, 537.0], [17.9, 537.0], [18.0, 538.0], [18.1, 538.0], [18.2, 538.0], [18.3, 538.0], [18.4, 538.0], [18.5, 538.0], [18.6, 538.0], [18.7, 538.0], [18.8, 538.0], [18.9, 538.0], [19.0, 545.0], [19.1, 545.0], [19.2, 545.0], [19.3, 545.0], [19.4, 545.0], [19.5, 545.0], [19.6, 545.0], [19.7, 545.0], [19.8, 545.0], [19.9, 545.0], [20.0, 547.0], [20.1, 547.0], [20.2, 547.0], [20.3, 547.0], [20.4, 547.0], [20.5, 547.0], [20.6, 547.0], [20.7, 547.0], [20.8, 547.0], [20.9, 547.0], [21.0, 552.0], [21.1, 552.0], [21.2, 552.0], [21.3, 552.0], [21.4, 552.0], [21.5, 552.0], [21.6, 552.0], [21.7, 552.0], [21.8, 552.0], [21.9, 552.0], [22.0, 606.0], [22.1, 606.0], [22.2, 606.0], [22.3, 606.0], [22.4, 606.0], [22.5, 606.0], [22.6, 606.0], [22.7, 606.0], [22.8, 606.0], [22.9, 606.0], [23.0, 614.0], [23.1, 614.0], [23.2, 614.0], [23.3, 614.0], [23.4, 614.0], [23.5, 614.0], [23.6, 614.0], [23.7, 614.0], [23.8, 614.0], [23.9, 614.0], [24.0, 617.0], [24.1, 617.0], [24.2, 617.0], [24.3, 617.0], [24.4, 617.0], [24.5, 617.0], [24.6, 617.0], [24.7, 617.0], [24.8, 617.0], [24.9, 617.0], [25.0, 617.0], [25.1, 617.0], [25.2, 617.0], [25.3, 617.0], [25.4, 617.0], [25.5, 617.0], [25.6, 617.0], [25.7, 617.0], [25.8, 617.0], [25.9, 617.0], [26.0, 625.0], [26.1, 625.0], [26.2, 625.0], [26.3, 625.0], [26.4, 625.0], [26.5, 625.0], [26.6, 625.0], [26.7, 625.0], [26.8, 625.0], [26.9, 625.0], [27.0, 630.0], [27.1, 630.0], [27.2, 630.0], [27.3, 630.0], [27.4, 630.0], [27.5, 630.0], [27.6, 630.0], [27.7, 630.0], [27.8, 630.0], [27.9, 630.0], [28.0, 641.0], [28.1, 641.0], [28.2, 641.0], [28.3, 641.0], [28.4, 641.0], [28.5, 641.0], [28.6, 641.0], [28.7, 641.0], [28.8, 641.0], [28.9, 641.0], [29.0, 644.0], [29.1, 644.0], [29.2, 644.0], [29.3, 644.0], [29.4, 644.0], [29.5, 644.0], [29.6, 644.0], [29.7, 644.0], [29.8, 644.0], [29.9, 644.0], [30.0, 655.0], [30.1, 655.0], [30.2, 655.0], [30.3, 655.0], [30.4, 655.0], [30.5, 655.0], [30.6, 655.0], [30.7, 655.0], [30.8, 655.0], [30.9, 655.0], [31.0, 660.0], [31.1, 660.0], [31.2, 660.0], [31.3, 660.0], [31.4, 660.0], [31.5, 660.0], [31.6, 660.0], [31.7, 660.0], [31.8, 660.0], [31.9, 660.0], [32.0, 670.0], [32.1, 670.0], [32.2, 670.0], [32.3, 670.0], [32.4, 670.0], [32.5, 670.0], [32.6, 670.0], [32.7, 670.0], [32.8, 670.0], [32.9, 670.0], [33.0, 676.0], [33.1, 676.0], [33.2, 676.0], [33.3, 676.0], [33.4, 676.0], [33.5, 676.0], [33.6, 676.0], [33.7, 676.0], [33.8, 676.0], [33.9, 676.0], [34.0, 680.0], [34.1, 680.0], [34.2, 680.0], [34.3, 680.0], [34.4, 680.0], [34.5, 680.0], [34.6, 680.0], [34.7, 680.0], [34.8, 680.0], [34.9, 680.0], [35.0, 684.0], [35.1, 684.0], [35.2, 684.0], [35.3, 684.0], [35.4, 684.0], [35.5, 684.0], [35.6, 684.0], [35.7, 684.0], [35.8, 684.0], [35.9, 684.0], [36.0, 684.0], [36.1, 684.0], [36.2, 684.0], [36.3, 684.0], [36.4, 684.0], [36.5, 684.0], [36.6, 684.0], [36.7, 684.0], [36.8, 684.0], [36.9, 684.0], [37.0, 695.0], [37.1, 695.0], [37.2, 695.0], [37.3, 695.0], [37.4, 695.0], [37.5, 695.0], [37.6, 695.0], [37.7, 695.0], [37.8, 695.0], [37.9, 695.0], [38.0, 703.0], [38.1, 703.0], [38.2, 703.0], [38.3, 703.0], [38.4, 703.0], [38.5, 703.0], [38.6, 703.0], [38.7, 703.0], [38.8, 703.0], [38.9, 703.0], [39.0, 718.0], [39.1, 718.0], [39.2, 718.0], [39.3, 718.0], [39.4, 718.0], [39.5, 718.0], [39.6, 718.0], [39.7, 718.0], [39.8, 718.0], [39.9, 718.0], [40.0, 718.0], [40.1, 718.0], [40.2, 718.0], [40.3, 718.0], [40.4, 718.0], [40.5, 718.0], [40.6, 718.0], [40.7, 718.0], [40.8, 718.0], [40.9, 718.0], [41.0, 723.0], [41.1, 723.0], [41.2, 723.0], [41.3, 723.0], [41.4, 723.0], [41.5, 723.0], [41.6, 723.0], [41.7, 723.0], [41.8, 723.0], [41.9, 723.0], [42.0, 726.0], [42.1, 726.0], [42.2, 726.0], [42.3, 726.0], [42.4, 726.0], [42.5, 726.0], [42.6, 726.0], [42.7, 726.0], [42.8, 726.0], [42.9, 726.0], [43.0, 729.0], [43.1, 729.0], [43.2, 729.0], [43.3, 729.0], [43.4, 729.0], [43.5, 729.0], [43.6, 729.0], [43.7, 729.0], [43.8, 729.0], [43.9, 729.0], [44.0, 730.0], [44.1, 730.0], [44.2, 730.0], [44.3, 730.0], [44.4, 730.0], [44.5, 730.0], [44.6, 730.0], [44.7, 730.0], [44.8, 730.0], [44.9, 730.0], [45.0, 757.0], [45.1, 757.0], [45.2, 757.0], [45.3, 757.0], [45.4, 757.0], [45.5, 757.0], [45.6, 757.0], [45.7, 757.0], [45.8, 757.0], [45.9, 757.0], [46.0, 759.0], [46.1, 759.0], [46.2, 759.0], [46.3, 759.0], [46.4, 759.0], [46.5, 759.0], [46.6, 759.0], [46.7, 759.0], [46.8, 759.0], [46.9, 759.0], [47.0, 762.0], [47.1, 762.0], [47.2, 762.0], [47.3, 762.0], [47.4, 762.0], [47.5, 762.0], [47.6, 762.0], [47.7, 762.0], [47.8, 762.0], [47.9, 762.0], [48.0, 770.0], [48.1, 770.0], [48.2, 770.0], [48.3, 770.0], [48.4, 770.0], [48.5, 770.0], [48.6, 770.0], [48.7, 770.0], [48.8, 770.0], [48.9, 770.0], [49.0, 780.0], [49.1, 780.0], [49.2, 780.0], [49.3, 780.0], [49.4, 780.0], [49.5, 780.0], [49.6, 780.0], [49.7, 780.0], [49.8, 780.0], [49.9, 780.0], [50.0, 796.0], [50.1, 796.0], [50.2, 796.0], [50.3, 796.0], [50.4, 796.0], [50.5, 796.0], [50.6, 796.0], [50.7, 796.0], [50.8, 796.0], [50.9, 796.0], [51.0, 802.0], [51.1, 802.0], [51.2, 802.0], [51.3, 802.0], [51.4, 802.0], [51.5, 802.0], [51.6, 802.0], [51.7, 802.0], [51.8, 802.0], [51.9, 802.0], [52.0, 803.0], [52.1, 803.0], [52.2, 803.0], [52.3, 803.0], [52.4, 803.0], [52.5, 803.0], [52.6, 803.0], [52.7, 803.0], [52.8, 803.0], [52.9, 803.0], [53.0, 803.0], [53.1, 803.0], [53.2, 803.0], [53.3, 803.0], [53.4, 803.0], [53.5, 803.0], [53.6, 803.0], [53.7, 803.0], [53.8, 803.0], [53.9, 803.0], [54.0, 834.0], [54.1, 834.0], [54.2, 834.0], [54.3, 834.0], [54.4, 834.0], [54.5, 834.0], [54.6, 834.0], [54.7, 834.0], [54.8, 834.0], [54.9, 834.0], [55.0, 838.0], [55.1, 838.0], [55.2, 838.0], [55.3, 838.0], [55.4, 838.0], [55.5, 838.0], [55.6, 838.0], [55.7, 838.0], [55.8, 838.0], [55.9, 838.0], [56.0, 850.0], [56.1, 850.0], [56.2, 850.0], [56.3, 850.0], [56.4, 850.0], [56.5, 850.0], [56.6, 850.0], [56.7, 850.0], [56.8, 850.0], [56.9, 850.0], [57.0, 862.0], [57.1, 862.0], [57.2, 862.0], [57.3, 862.0], [57.4, 862.0], [57.5, 862.0], [57.6, 862.0], [57.7, 862.0], [57.8, 862.0], [57.9, 862.0], [58.0, 871.0], [58.1, 871.0], [58.2, 871.0], [58.3, 871.0], [58.4, 871.0], [58.5, 871.0], [58.6, 871.0], [58.7, 871.0], [58.8, 871.0], [58.9, 871.0], [59.0, 872.0], [59.1, 872.0], [59.2, 872.0], [59.3, 872.0], [59.4, 872.0], [59.5, 872.0], [59.6, 872.0], [59.7, 872.0], [59.8, 872.0], [59.9, 872.0], [60.0, 879.0], [60.1, 879.0], [60.2, 879.0], [60.3, 879.0], [60.4, 879.0], [60.5, 879.0], [60.6, 879.0], [60.7, 879.0], [60.8, 879.0], [60.9, 879.0], [61.0, 882.0], [61.1, 882.0], [61.2, 882.0], [61.3, 882.0], [61.4, 882.0], [61.5, 882.0], [61.6, 882.0], [61.7, 882.0], [61.8, 882.0], [61.9, 882.0], [62.0, 882.0], [62.1, 882.0], [62.2, 882.0], [62.3, 882.0], [62.4, 882.0], [62.5, 882.0], [62.6, 882.0], [62.7, 882.0], [62.8, 882.0], [62.9, 882.0], [63.0, 883.0], [63.1, 883.0], [63.2, 883.0], [63.3, 883.0], [63.4, 883.0], [63.5, 883.0], [63.6, 883.0], [63.7, 883.0], [63.8, 883.0], [63.9, 883.0], [64.0, 889.0], [64.1, 889.0], [64.2, 889.0], [64.3, 889.0], [64.4, 889.0], [64.5, 889.0], [64.6, 889.0], [64.7, 889.0], [64.8, 889.0], [64.9, 889.0], [65.0, 900.0], [65.1, 900.0], [65.2, 900.0], [65.3, 900.0], [65.4, 900.0], [65.5, 900.0], [65.6, 900.0], [65.7, 900.0], [65.8, 900.0], [65.9, 900.0], [66.0, 901.0], [66.1, 901.0], [66.2, 901.0], [66.3, 901.0], [66.4, 901.0], [66.5, 901.0], [66.6, 901.0], [66.7, 901.0], [66.8, 901.0], [66.9, 901.0], [67.0, 906.0], [67.1, 906.0], [67.2, 906.0], [67.3, 906.0], [67.4, 906.0], [67.5, 906.0], [67.6, 906.0], [67.7, 906.0], [67.8, 906.0], [67.9, 906.0], [68.0, 907.0], [68.1, 907.0], [68.2, 907.0], [68.3, 907.0], [68.4, 907.0], [68.5, 907.0], [68.6, 907.0], [68.7, 907.0], [68.8, 907.0], [68.9, 907.0], [69.0, 907.0], [69.1, 907.0], [69.2, 907.0], [69.3, 907.0], [69.4, 907.0], [69.5, 907.0], [69.6, 907.0], [69.7, 907.0], [69.8, 907.0], [69.9, 907.0], [70.0, 917.0], [70.1, 917.0], [70.2, 917.0], [70.3, 917.0], [70.4, 917.0], [70.5, 917.0], [70.6, 917.0], [70.7, 917.0], [70.8, 917.0], [70.9, 917.0], [71.0, 918.0], [71.1, 918.0], [71.2, 918.0], [71.3, 918.0], [71.4, 918.0], [71.5, 918.0], [71.6, 918.0], [71.7, 918.0], [71.8, 918.0], [71.9, 918.0], [72.0, 925.0], [72.1, 925.0], [72.2, 925.0], [72.3, 925.0], [72.4, 925.0], [72.5, 925.0], [72.6, 925.0], [72.7, 925.0], [72.8, 925.0], [72.9, 925.0], [73.0, 927.0], [73.1, 927.0], [73.2, 927.0], [73.3, 927.0], [73.4, 927.0], [73.5, 927.0], [73.6, 927.0], [73.7, 927.0], [73.8, 927.0], [73.9, 927.0], [74.0, 945.0], [74.1, 945.0], [74.2, 945.0], [74.3, 945.0], [74.4, 945.0], [74.5, 945.0], [74.6, 945.0], [74.7, 945.0], [74.8, 945.0], [74.9, 945.0], [75.0, 948.0], [75.1, 948.0], [75.2, 948.0], [75.3, 948.0], [75.4, 948.0], [75.5, 948.0], [75.6, 948.0], [75.7, 948.0], [75.8, 948.0], [75.9, 948.0], [76.0, 965.0], [76.1, 965.0], [76.2, 965.0], [76.3, 965.0], [76.4, 965.0], [76.5, 965.0], [76.6, 965.0], [76.7, 965.0], [76.8, 965.0], [76.9, 965.0], [77.0, 965.0], [77.1, 965.0], [77.2, 965.0], [77.3, 965.0], [77.4, 965.0], [77.5, 965.0], [77.6, 965.0], [77.7, 965.0], [77.8, 965.0], [77.9, 965.0], [78.0, 978.0], [78.1, 978.0], [78.2, 978.0], [78.3, 978.0], [78.4, 978.0], [78.5, 978.0], [78.6, 978.0], [78.7, 978.0], [78.8, 978.0], [78.9, 978.0], [79.0, 979.0], [79.1, 979.0], [79.2, 979.0], [79.3, 979.0], [79.4, 979.0], [79.5, 979.0], [79.6, 979.0], [79.7, 979.0], [79.8, 979.0], [79.9, 979.0], [80.0, 980.0], [80.1, 980.0], [80.2, 980.0], [80.3, 980.0], [80.4, 980.0], [80.5, 980.0], [80.6, 980.0], [80.7, 980.0], [80.8, 980.0], [80.9, 980.0], [81.0, 984.0], [81.1, 984.0], [81.2, 984.0], [81.3, 984.0], [81.4, 984.0], [81.5, 984.0], [81.6, 984.0], [81.7, 984.0], [81.8, 984.0], [81.9, 984.0], [82.0, 986.0], [82.1, 986.0], [82.2, 986.0], [82.3, 986.0], [82.4, 986.0], [82.5, 986.0], [82.6, 986.0], [82.7, 986.0], [82.8, 986.0], [82.9, 986.0], [83.0, 992.0], [83.1, 992.0], [83.2, 992.0], [83.3, 992.0], [83.4, 992.0], [83.5, 992.0], [83.6, 992.0], [83.7, 992.0], [83.8, 992.0], [83.9, 992.0], [84.0, 1009.0], [84.1, 1009.0], [84.2, 1009.0], [84.3, 1009.0], [84.4, 1009.0], [84.5, 1009.0], [84.6, 1009.0], [84.7, 1009.0], [84.8, 1009.0], [84.9, 1009.0], [85.0, 1020.0], [85.1, 1020.0], [85.2, 1020.0], [85.3, 1020.0], [85.4, 1020.0], [85.5, 1020.0], [85.6, 1020.0], [85.7, 1020.0], [85.8, 1020.0], [85.9, 1020.0], [86.0, 1027.0], [86.1, 1027.0], [86.2, 1027.0], [86.3, 1027.0], [86.4, 1027.0], [86.5, 1027.0], [86.6, 1027.0], [86.7, 1027.0], [86.8, 1027.0], [86.9, 1027.0], [87.0, 1037.0], [87.1, 1037.0], [87.2, 1037.0], [87.3, 1037.0], [87.4, 1037.0], [87.5, 1037.0], [87.6, 1037.0], [87.7, 1037.0], [87.8, 1037.0], [87.9, 1037.0], [88.0, 1038.0], [88.1, 1038.0], [88.2, 1038.0], [88.3, 1038.0], [88.4, 1038.0], [88.5, 1038.0], [88.6, 1038.0], [88.7, 1038.0], [88.8, 1038.0], [88.9, 1038.0], [89.0, 1056.0], [89.1, 1056.0], [89.2, 1056.0], [89.3, 1056.0], [89.4, 1056.0], [89.5, 1056.0], [89.6, 1056.0], [89.7, 1056.0], [89.8, 1056.0], [89.9, 1056.0], [90.0, 1056.0], [90.1, 1056.0], [90.2, 1056.0], [90.3, 1056.0], [90.4, 1056.0], [90.5, 1056.0], [90.6, 1056.0], [90.7, 1056.0], [90.8, 1056.0], [90.9, 1056.0], [91.0, 1058.0], [91.1, 1058.0], [91.2, 1058.0], [91.3, 1058.0], [91.4, 1058.0], [91.5, 1058.0], [91.6, 1058.0], [91.7, 1058.0], [91.8, 1058.0], [91.9, 1058.0], [92.0, 1074.0], [92.1, 1074.0], [92.2, 1074.0], [92.3, 1074.0], [92.4, 1074.0], [92.5, 1074.0], [92.6, 1074.0], [92.7, 1074.0], [92.8, 1074.0], [92.9, 1074.0], [93.0, 1084.0], [93.1, 1084.0], [93.2, 1084.0], [93.3, 1084.0], [93.4, 1084.0], [93.5, 1084.0], [93.6, 1084.0], [93.7, 1084.0], [93.8, 1084.0], [93.9, 1084.0], [94.0, 1094.0], [94.1, 1094.0], [94.2, 1094.0], [94.3, 1094.0], [94.4, 1094.0], [94.5, 1094.0], [94.6, 1094.0], [94.7, 1094.0], [94.8, 1094.0], [94.9, 1094.0], [95.0, 1098.0], [95.1, 1098.0], [95.2, 1098.0], [95.3, 1098.0], [95.4, 1098.0], [95.5, 1098.0], [95.6, 1098.0], [95.7, 1098.0], [95.8, 1098.0], [95.9, 1098.0], [96.0, 1107.0], [96.1, 1107.0], [96.2, 1107.0], [96.3, 1107.0], [96.4, 1107.0], [96.5, 1107.0], [96.6, 1107.0], [96.7, 1107.0], [96.8, 1107.0], [96.9, 1107.0], [97.0, 1137.0], [97.1, 1137.0], [97.2, 1137.0], [97.3, 1137.0], [97.4, 1137.0], [97.5, 1137.0], [97.6, 1137.0], [97.7, 1137.0], [97.8, 1137.0], [97.9, 1137.0], [98.0, 1165.0], [98.1, 1165.0], [98.2, 1165.0], [98.3, 1165.0], [98.4, 1165.0], [98.5, 1165.0], [98.6, 1165.0], [98.7, 1165.0], [98.8, 1165.0], [98.9, 1165.0], [99.0, 1192.0], [99.1, 1192.0], [99.2, 1192.0], [99.3, 1192.0], [99.4, 1192.0], [99.5, 1192.0], [99.6, 1192.0], [99.7, 1192.0], [99.8, 1192.0], [99.9, 1192.0]], "isOverall": false, "label": "Q1", "isController": false}, {"data": [[0.0, 124.0], [0.1, 124.0], [0.2, 124.0], [0.3, 124.0], [0.4, 124.0], [0.5, 124.0], [0.6, 124.0], [0.7, 124.0], [0.8, 124.0], [0.9, 124.0], [1.0, 124.0], [1.1, 124.0], [1.2, 124.0], [1.3, 124.0], [1.4, 124.0], [1.5, 124.0], [1.6, 124.0], [1.7, 124.0], [1.8, 124.0], [1.9, 124.0], [2.0, 124.0], [2.1, 124.0], [2.2, 124.0], [2.3, 124.0], [2.4, 124.0], [2.5, 180.0], [2.6, 180.0], [2.7, 180.0], [2.8, 180.0], [2.9, 180.0], [3.0, 180.0], [3.1, 180.0], [3.2, 180.0], [3.3, 180.0], [3.4, 180.0], [3.5, 180.0], [3.6, 180.0], [3.7, 180.0], [3.8, 180.0], [3.9, 180.0], [4.0, 180.0], [4.1, 180.0], [4.2, 180.0], [4.3, 180.0], [4.4, 180.0], [4.5, 180.0], [4.6, 180.0], [4.7, 180.0], [4.8, 180.0], [4.9, 180.0], [5.0, 426.0], [5.1, 426.0], [5.2, 426.0], [5.3, 426.0], [5.4, 426.0], [5.5, 426.0], [5.6, 426.0], [5.7, 426.0], [5.8, 426.0], [5.9, 426.0], [6.0, 426.0], [6.1, 426.0], [6.2, 426.0], [6.3, 426.0], [6.4, 426.0], [6.5, 426.0], [6.6, 426.0], [6.7, 426.0], [6.8, 426.0], [6.9, 426.0], [7.0, 426.0], [7.1, 426.0], [7.2, 426.0], [7.3, 426.0], [7.4, 426.0], [7.5, 477.0], [7.6, 477.0], [7.7, 477.0], [7.8, 477.0], [7.9, 477.0], [8.0, 477.0], [8.1, 477.0], [8.2, 477.0], [8.3, 477.0], [8.4, 477.0], [8.5, 477.0], [8.6, 477.0], [8.7, 477.0], [8.8, 477.0], [8.9, 477.0], [9.0, 477.0], [9.1, 477.0], [9.2, 477.0], [9.3, 477.0], [9.4, 477.0], [9.5, 477.0], [9.6, 477.0], [9.7, 477.0], [9.8, 477.0], [9.9, 477.0], [10.0, 491.0], [10.1, 491.0], [10.2, 491.0], [10.3, 491.0], [10.4, 491.0], [10.5, 491.0], [10.6, 491.0], [10.7, 491.0], [10.8, 491.0], [10.9, 491.0], [11.0, 491.0], [11.1, 491.0], [11.2, 491.0], [11.3, 491.0], [11.4, 491.0], [11.5, 491.0], [11.6, 491.0], [11.7, 491.0], [11.8, 491.0], [11.9, 491.0], [12.0, 491.0], [12.1, 491.0], [12.2, 491.0], [12.3, 491.0], [12.4, 491.0], [12.5, 540.0], [12.6, 540.0], [12.7, 540.0], [12.8, 540.0], [12.9, 540.0], [13.0, 540.0], [13.1, 540.0], [13.2, 540.0], [13.3, 540.0], [13.4, 540.0], [13.5, 540.0], [13.6, 540.0], [13.7, 540.0], [13.8, 540.0], [13.9, 540.0], [14.0, 540.0], [14.1, 540.0], [14.2, 540.0], [14.3, 540.0], [14.4, 540.0], [14.5, 540.0], [14.6, 540.0], [14.7, 540.0], [14.8, 540.0], [14.9, 540.0], [15.0, 547.0], [15.1, 547.0], [15.2, 547.0], [15.3, 547.0], [15.4, 547.0], [15.5, 547.0], [15.6, 547.0], [15.7, 547.0], [15.8, 547.0], [15.9, 547.0], [16.0, 547.0], [16.1, 547.0], [16.2, 547.0], [16.3, 547.0], [16.4, 547.0], [16.5, 547.0], [16.6, 547.0], [16.7, 547.0], [16.8, 547.0], [16.9, 547.0], [17.0, 547.0], [17.1, 547.0], [17.2, 547.0], [17.3, 547.0], [17.4, 547.0], [17.5, 631.0], [17.6, 631.0], [17.7, 631.0], [17.8, 631.0], [17.9, 631.0], [18.0, 631.0], [18.1, 631.0], [18.2, 631.0], [18.3, 631.0], [18.4, 631.0], [18.5, 631.0], [18.6, 631.0], [18.7, 631.0], [18.8, 631.0], [18.9, 631.0], [19.0, 631.0], [19.1, 631.0], [19.2, 631.0], [19.3, 631.0], [19.4, 631.0], [19.5, 631.0], [19.6, 631.0], [19.7, 631.0], [19.8, 631.0], [19.9, 631.0], [20.0, 714.0], [20.1, 714.0], [20.2, 714.0], [20.3, 714.0], [20.4, 714.0], [20.5, 714.0], [20.6, 714.0], [20.7, 714.0], [20.8, 714.0], [20.9, 714.0], [21.0, 714.0], [21.1, 714.0], [21.2, 714.0], [21.3, 714.0], [21.4, 714.0], [21.5, 714.0], [21.6, 714.0], [21.7, 714.0], [21.8, 714.0], [21.9, 714.0], [22.0, 714.0], [22.1, 714.0], [22.2, 714.0], [22.3, 714.0], [22.4, 714.0], [22.5, 775.0], [22.6, 775.0], [22.7, 775.0], [22.8, 775.0], [22.9, 775.0], [23.0, 775.0], [23.1, 775.0], [23.2, 775.0], [23.3, 775.0], [23.4, 775.0], [23.5, 775.0], [23.6, 775.0], [23.7, 775.0], [23.8, 775.0], [23.9, 775.0], [24.0, 775.0], [24.1, 775.0], [24.2, 775.0], [24.3, 775.0], [24.4, 775.0], [24.5, 775.0], [24.6, 775.0], [24.7, 775.0], [24.8, 775.0], [24.9, 775.0], [25.0, 828.0], [25.1, 828.0], [25.2, 828.0], [25.3, 828.0], [25.4, 828.0], [25.5, 828.0], [25.6, 828.0], [25.7, 828.0], [25.8, 828.0], [25.9, 828.0], [26.0, 828.0], [26.1, 828.0], [26.2, 828.0], [26.3, 828.0], [26.4, 828.0], [26.5, 828.0], [26.6, 828.0], [26.7, 828.0], [26.8, 828.0], [26.9, 828.0], [27.0, 828.0], [27.1, 828.0], [27.2, 828.0], [27.3, 828.0], [27.4, 828.0], [27.5, 850.0], [27.6, 850.0], [27.7, 850.0], [27.8, 850.0], [27.9, 850.0], [28.0, 850.0], [28.1, 850.0], [28.2, 850.0], [28.3, 850.0], [28.4, 850.0], [28.5, 850.0], [28.6, 850.0], [28.7, 850.0], [28.8, 850.0], [28.9, 850.0], [29.0, 850.0], [29.1, 850.0], [29.2, 850.0], [29.3, 850.0], [29.4, 850.0], [29.5, 850.0], [29.6, 850.0], [29.7, 850.0], [29.8, 850.0], [29.9, 850.0], [30.0, 875.0], [30.1, 875.0], [30.2, 875.0], [30.3, 875.0], [30.4, 875.0], [30.5, 875.0], [30.6, 875.0], [30.7, 875.0], [30.8, 875.0], [30.9, 875.0], [31.0, 875.0], [31.1, 875.0], [31.2, 875.0], [31.3, 875.0], [31.4, 875.0], [31.5, 875.0], [31.6, 875.0], [31.7, 875.0], [31.8, 875.0], [31.9, 875.0], [32.0, 875.0], [32.1, 875.0], [32.2, 875.0], [32.3, 875.0], [32.4, 875.0], [32.5, 896.0], [32.6, 896.0], [32.7, 896.0], [32.8, 896.0], [32.9, 896.0], [33.0, 896.0], [33.1, 896.0], [33.2, 896.0], [33.3, 896.0], [33.4, 896.0], [33.5, 896.0], [33.6, 896.0], [33.7, 896.0], [33.8, 896.0], [33.9, 896.0], [34.0, 896.0], [34.1, 896.0], [34.2, 896.0], [34.3, 896.0], [34.4, 896.0], [34.5, 896.0], [34.6, 896.0], [34.7, 896.0], [34.8, 896.0], [34.9, 896.0], [35.0, 898.0], [35.1, 898.0], [35.2, 898.0], [35.3, 898.0], [35.4, 898.0], [35.5, 898.0], [35.6, 898.0], [35.7, 898.0], [35.8, 898.0], [35.9, 898.0], [36.0, 898.0], [36.1, 898.0], [36.2, 898.0], [36.3, 898.0], [36.4, 898.0], [36.5, 898.0], [36.6, 898.0], [36.7, 898.0], [36.8, 898.0], [36.9, 898.0], [37.0, 898.0], [37.1, 898.0], [37.2, 898.0], [37.3, 898.0], [37.4, 898.0], [37.5, 905.0], [37.6, 905.0], [37.7, 905.0], [37.8, 905.0], [37.9, 905.0], [38.0, 905.0], [38.1, 905.0], [38.2, 905.0], [38.3, 905.0], [38.4, 905.0], [38.5, 905.0], [38.6, 905.0], [38.7, 905.0], [38.8, 905.0], [38.9, 905.0], [39.0, 905.0], [39.1, 905.0], [39.2, 905.0], [39.3, 905.0], [39.4, 905.0], [39.5, 905.0], [39.6, 905.0], [39.7, 905.0], [39.8, 905.0], [39.9, 905.0], [40.0, 928.0], [40.1, 928.0], [40.2, 928.0], [40.3, 928.0], [40.4, 928.0], [40.5, 928.0], [40.6, 928.0], [40.7, 928.0], [40.8, 928.0], [40.9, 928.0], [41.0, 928.0], [41.1, 928.0], [41.2, 928.0], [41.3, 928.0], [41.4, 928.0], [41.5, 928.0], [41.6, 928.0], [41.7, 928.0], [41.8, 928.0], [41.9, 928.0], [42.0, 928.0], [42.1, 928.0], [42.2, 928.0], [42.3, 928.0], [42.4, 928.0], [42.5, 950.0], [42.6, 950.0], [42.7, 950.0], [42.8, 950.0], [42.9, 950.0], [43.0, 950.0], [43.1, 950.0], [43.2, 950.0], [43.3, 950.0], [43.4, 950.0], [43.5, 950.0], [43.6, 950.0], [43.7, 950.0], [43.8, 950.0], [43.9, 950.0], [44.0, 950.0], [44.1, 950.0], [44.2, 950.0], [44.3, 950.0], [44.4, 950.0], [44.5, 950.0], [44.6, 950.0], [44.7, 950.0], [44.8, 950.0], [44.9, 950.0], [45.0, 950.0], [45.1, 950.0], [45.2, 950.0], [45.3, 950.0], [45.4, 950.0], [45.5, 950.0], [45.6, 950.0], [45.7, 950.0], [45.8, 950.0], [45.9, 950.0], [46.0, 950.0], [46.1, 950.0], [46.2, 950.0], [46.3, 950.0], [46.4, 950.0], [46.5, 950.0], [46.6, 950.0], [46.7, 950.0], [46.8, 950.0], [46.9, 950.0], [47.0, 950.0], [47.1, 950.0], [47.2, 950.0], [47.3, 950.0], [47.4, 950.0], [47.5, 951.0], [47.6, 951.0], [47.7, 951.0], [47.8, 951.0], [47.9, 951.0], [48.0, 951.0], [48.1, 951.0], [48.2, 951.0], [48.3, 951.0], [48.4, 951.0], [48.5, 951.0], [48.6, 951.0], [48.7, 951.0], [48.8, 951.0], [48.9, 951.0], [49.0, 951.0], [49.1, 951.0], [49.2, 951.0], [49.3, 951.0], [49.4, 951.0], [49.5, 951.0], [49.6, 951.0], [49.7, 951.0], [49.8, 951.0], [49.9, 951.0], [50.0, 988.0], [50.1, 988.0], [50.2, 988.0], [50.3, 988.0], [50.4, 988.0], [50.5, 988.0], [50.6, 988.0], [50.7, 988.0], [50.8, 988.0], [50.9, 988.0], [51.0, 988.0], [51.1, 988.0], [51.2, 988.0], [51.3, 988.0], [51.4, 988.0], [51.5, 988.0], [51.6, 988.0], [51.7, 988.0], [51.8, 988.0], [51.9, 988.0], [52.0, 988.0], [52.1, 988.0], [52.2, 988.0], [52.3, 988.0], [52.4, 988.0], [52.5, 988.0], [52.6, 988.0], [52.7, 988.0], [52.8, 988.0], [52.9, 988.0], [53.0, 988.0], [53.1, 988.0], [53.2, 988.0], [53.3, 988.0], [53.4, 988.0], [53.5, 988.0], [53.6, 988.0], [53.7, 988.0], [53.8, 988.0], [53.9, 988.0], [54.0, 988.0], [54.1, 988.0], [54.2, 988.0], [54.3, 988.0], [54.4, 988.0], [54.5, 988.0], [54.6, 988.0], [54.7, 988.0], [54.8, 988.0], [54.9, 988.0], [55.0, 996.0], [55.1, 996.0], [55.2, 996.0], [55.3, 996.0], [55.4, 996.0], [55.5, 996.0], [55.6, 996.0], [55.7, 996.0], [55.8, 996.0], [55.9, 996.0], [56.0, 996.0], [56.1, 996.0], [56.2, 996.0], [56.3, 996.0], [56.4, 996.0], [56.5, 996.0], [56.6, 996.0], [56.7, 996.0], [56.8, 996.0], [56.9, 996.0], [57.0, 996.0], [57.1, 996.0], [57.2, 996.0], [57.3, 996.0], [57.4, 996.0], [57.5, 1008.0], [57.6, 1008.0], [57.7, 1008.0], [57.8, 1008.0], [57.9, 1008.0], [58.0, 1008.0], [58.1, 1008.0], [58.2, 1008.0], [58.3, 1008.0], [58.4, 1008.0], [58.5, 1008.0], [58.6, 1008.0], [58.7, 1008.0], [58.8, 1008.0], [58.9, 1008.0], [59.0, 1008.0], [59.1, 1008.0], [59.2, 1008.0], [59.3, 1008.0], [59.4, 1008.0], [59.5, 1008.0], [59.6, 1008.0], [59.7, 1008.0], [59.8, 1008.0], [59.9, 1008.0], [60.0, 1014.0], [60.1, 1014.0], [60.2, 1014.0], [60.3, 1014.0], [60.4, 1014.0], [60.5, 1014.0], [60.6, 1014.0], [60.7, 1014.0], [60.8, 1014.0], [60.9, 1014.0], [61.0, 1014.0], [61.1, 1014.0], [61.2, 1014.0], [61.3, 1014.0], [61.4, 1014.0], [61.5, 1014.0], [61.6, 1014.0], [61.7, 1014.0], [61.8, 1014.0], [61.9, 1014.0], [62.0, 1014.0], [62.1, 1014.0], [62.2, 1014.0], [62.3, 1014.0], [62.4, 1014.0], [62.5, 1037.0], [62.6, 1037.0], [62.7, 1037.0], [62.8, 1037.0], [62.9, 1037.0], [63.0, 1037.0], [63.1, 1037.0], [63.2, 1037.0], [63.3, 1037.0], [63.4, 1037.0], [63.5, 1037.0], [63.6, 1037.0], [63.7, 1037.0], [63.8, 1037.0], [63.9, 1037.0], [64.0, 1037.0], [64.1, 1037.0], [64.2, 1037.0], [64.3, 1037.0], [64.4, 1037.0], [64.5, 1037.0], [64.6, 1037.0], [64.7, 1037.0], [64.8, 1037.0], [64.9, 1037.0], [65.0, 1041.0], [65.1, 1041.0], [65.2, 1041.0], [65.3, 1041.0], [65.4, 1041.0], [65.5, 1041.0], [65.6, 1041.0], [65.7, 1041.0], [65.8, 1041.0], [65.9, 1041.0], [66.0, 1041.0], [66.1, 1041.0], [66.2, 1041.0], [66.3, 1041.0], [66.4, 1041.0], [66.5, 1041.0], [66.6, 1041.0], [66.7, 1041.0], [66.8, 1041.0], [66.9, 1041.0], [67.0, 1041.0], [67.1, 1041.0], [67.2, 1041.0], [67.3, 1041.0], [67.4, 1041.0], [67.5, 1043.0], [67.6, 1043.0], [67.7, 1043.0], [67.8, 1043.0], [67.9, 1043.0], [68.0, 1043.0], [68.1, 1043.0], [68.2, 1043.0], [68.3, 1043.0], [68.4, 1043.0], [68.5, 1043.0], [68.6, 1043.0], [68.7, 1043.0], [68.8, 1043.0], [68.9, 1043.0], [69.0, 1043.0], [69.1, 1043.0], [69.2, 1043.0], [69.3, 1043.0], [69.4, 1043.0], [69.5, 1043.0], [69.6, 1043.0], [69.7, 1043.0], [69.8, 1043.0], [69.9, 1043.0], [70.0, 1053.0], [70.1, 1053.0], [70.2, 1053.0], [70.3, 1053.0], [70.4, 1053.0], [70.5, 1053.0], [70.6, 1053.0], [70.7, 1053.0], [70.8, 1053.0], [70.9, 1053.0], [71.0, 1053.0], [71.1, 1053.0], [71.2, 1053.0], [71.3, 1053.0], [71.4, 1053.0], [71.5, 1053.0], [71.6, 1053.0], [71.7, 1053.0], [71.8, 1053.0], [71.9, 1053.0], [72.0, 1053.0], [72.1, 1053.0], [72.2, 1053.0], [72.3, 1053.0], [72.4, 1053.0], [72.5, 1065.0], [72.6, 1065.0], [72.7, 1065.0], [72.8, 1065.0], [72.9, 1065.0], [73.0, 1065.0], [73.1, 1065.0], [73.2, 1065.0], [73.3, 1065.0], [73.4, 1065.0], [73.5, 1065.0], [73.6, 1065.0], [73.7, 1065.0], [73.8, 1065.0], [73.9, 1065.0], [74.0, 1065.0], [74.1, 1065.0], [74.2, 1065.0], [74.3, 1065.0], [74.4, 1065.0], [74.5, 1065.0], [74.6, 1065.0], [74.7, 1065.0], [74.8, 1065.0], [74.9, 1065.0], [75.0, 1080.0], [75.1, 1080.0], [75.2, 1080.0], [75.3, 1080.0], [75.4, 1080.0], [75.5, 1080.0], [75.6, 1080.0], [75.7, 1080.0], [75.8, 1080.0], [75.9, 1080.0], [76.0, 1080.0], [76.1, 1080.0], [76.2, 1080.0], [76.3, 1080.0], [76.4, 1080.0], [76.5, 1080.0], [76.6, 1080.0], [76.7, 1080.0], [76.8, 1080.0], [76.9, 1080.0], [77.0, 1080.0], [77.1, 1080.0], [77.2, 1080.0], [77.3, 1080.0], [77.4, 1080.0], [77.5, 1100.0], [77.6, 1100.0], [77.7, 1100.0], [77.8, 1100.0], [77.9, 1100.0], [78.0, 1100.0], [78.1, 1100.0], [78.2, 1100.0], [78.3, 1100.0], [78.4, 1100.0], [78.5, 1100.0], [78.6, 1100.0], [78.7, 1100.0], [78.8, 1100.0], [78.9, 1100.0], [79.0, 1100.0], [79.1, 1100.0], [79.2, 1100.0], [79.3, 1100.0], [79.4, 1100.0], [79.5, 1100.0], [79.6, 1100.0], [79.7, 1100.0], [79.8, 1100.0], [79.9, 1100.0], [80.0, 1122.0], [80.1, 1122.0], [80.2, 1122.0], [80.3, 1122.0], [80.4, 1122.0], [80.5, 1122.0], [80.6, 1122.0], [80.7, 1122.0], [80.8, 1122.0], [80.9, 1122.0], [81.0, 1122.0], [81.1, 1122.0], [81.2, 1122.0], [81.3, 1122.0], [81.4, 1122.0], [81.5, 1122.0], [81.6, 1122.0], [81.7, 1122.0], [81.8, 1122.0], [81.9, 1122.0], [82.0, 1122.0], [82.1, 1122.0], [82.2, 1122.0], [82.3, 1122.0], [82.4, 1122.0], [82.5, 1124.0], [82.6, 1124.0], [82.7, 1124.0], [82.8, 1124.0], [82.9, 1124.0], [83.0, 1124.0], [83.1, 1124.0], [83.2, 1124.0], [83.3, 1124.0], [83.4, 1124.0], [83.5, 1124.0], [83.6, 1124.0], [83.7, 1124.0], [83.8, 1124.0], [83.9, 1124.0], [84.0, 1124.0], [84.1, 1124.0], [84.2, 1124.0], [84.3, 1124.0], [84.4, 1124.0], [84.5, 1124.0], [84.6, 1124.0], [84.7, 1124.0], [84.8, 1124.0], [84.9, 1124.0], [85.0, 1159.0], [85.1, 1159.0], [85.2, 1159.0], [85.3, 1159.0], [85.4, 1159.0], [85.5, 1159.0], [85.6, 1159.0], [85.7, 1159.0], [85.8, 1159.0], [85.9, 1159.0], [86.0, 1159.0], [86.1, 1159.0], [86.2, 1159.0], [86.3, 1159.0], [86.4, 1159.0], [86.5, 1159.0], [86.6, 1159.0], [86.7, 1159.0], [86.8, 1159.0], [86.9, 1159.0], [87.0, 1159.0], [87.1, 1159.0], [87.2, 1159.0], [87.3, 1159.0], [87.4, 1159.0], [87.5, 1175.0], [87.6, 1175.0], [87.7, 1175.0], [87.8, 1175.0], [87.9, 1175.0], [88.0, 1175.0], [88.1, 1175.0], [88.2, 1175.0], [88.3, 1175.0], [88.4, 1175.0], [88.5, 1175.0], [88.6, 1175.0], [88.7, 1175.0], [88.8, 1175.0], [88.9, 1175.0], [89.0, 1175.0], [89.1, 1175.0], [89.2, 1175.0], [89.3, 1175.0], [89.4, 1175.0], [89.5, 1175.0], [89.6, 1175.0], [89.7, 1175.0], [89.8, 1175.0], [89.9, 1175.0], [90.0, 1208.0], [90.1, 1208.0], [90.2, 1208.0], [90.3, 1208.0], [90.4, 1208.0], [90.5, 1208.0], [90.6, 1208.0], [90.7, 1208.0], [90.8, 1208.0], [90.9, 1208.0], [91.0, 1208.0], [91.1, 1208.0], [91.2, 1208.0], [91.3, 1208.0], [91.4, 1208.0], [91.5, 1208.0], [91.6, 1208.0], [91.7, 1208.0], [91.8, 1208.0], [91.9, 1208.0], [92.0, 1208.0], [92.1, 1208.0], [92.2, 1208.0], [92.3, 1208.0], [92.4, 1208.0], [92.5, 1210.0], [92.6, 1210.0], [92.7, 1210.0], [92.8, 1210.0], [92.9, 1210.0], [93.0, 1210.0], [93.1, 1210.0], [93.2, 1210.0], [93.3, 1210.0], [93.4, 1210.0], [93.5, 1210.0], [93.6, 1210.0], [93.7, 1210.0], [93.8, 1210.0], [93.9, 1210.0], [94.0, 1210.0], [94.1, 1210.0], [94.2, 1210.0], [94.3, 1210.0], [94.4, 1210.0], [94.5, 1210.0], [94.6, 1210.0], [94.7, 1210.0], [94.8, 1210.0], [94.9, 1210.0], [95.0, 1211.0], [95.1, 1211.0], [95.2, 1211.0], [95.3, 1211.0], [95.4, 1211.0], [95.5, 1211.0], [95.6, 1211.0], [95.7, 1211.0], [95.8, 1211.0], [95.9, 1211.0], [96.0, 1211.0], [96.1, 1211.0], [96.2, 1211.0], [96.3, 1211.0], [96.4, 1211.0], [96.5, 1211.0], [96.6, 1211.0], [96.7, 1211.0], [96.8, 1211.0], [96.9, 1211.0], [97.0, 1211.0], [97.1, 1211.0], [97.2, 1211.0], [97.3, 1211.0], [97.4, 1211.0], [97.5, 1220.0], [97.6, 1220.0], [97.7, 1220.0], [97.8, 1220.0], [97.9, 1220.0], [98.0, 1220.0], [98.1, 1220.0], [98.2, 1220.0], [98.3, 1220.0], [98.4, 1220.0], [98.5, 1220.0], [98.6, 1220.0], [98.7, 1220.0], [98.8, 1220.0], [98.9, 1220.0], [99.0, 1220.0], [99.1, 1220.0], [99.2, 1220.0], [99.3, 1220.0], [99.4, 1220.0], [99.5, 1220.0], [99.6, 1220.0], [99.7, 1220.0], [99.8, 1220.0], [99.9, 1220.0]], "isOverall": false, "label": "Q2", "isController": false}, {"data": [[0.0, 44.0], [0.1, 44.0], [0.2, 44.0], [0.3, 44.0], [0.4, 44.0], [0.5, 44.0], [0.6, 44.0], [0.7, 44.0], [0.8, 44.0], [0.9, 44.0], [1.0, 47.0], [1.1, 47.0], [1.2, 47.0], [1.3, 47.0], [1.4, 47.0], [1.5, 47.0], [1.6, 47.0], [1.7, 47.0], [1.8, 47.0], [1.9, 47.0], [2.0, 49.0], [2.1, 49.0], [2.2, 49.0], [2.3, 49.0], [2.4, 49.0], [2.5, 49.0], [2.6, 49.0], [2.7, 49.0], [2.8, 49.0], [2.9, 49.0], [3.0, 52.0], [3.1, 52.0], [3.2, 52.0], [3.3, 52.0], [3.4, 52.0], [3.5, 52.0], [3.6, 52.0], [3.7, 52.0], [3.8, 52.0], [3.9, 52.0], [4.0, 52.0], [4.1, 52.0], [4.2, 52.0], [4.3, 52.0], [4.4, 52.0], [4.5, 52.0], [4.6, 52.0], [4.7, 52.0], [4.8, 52.0], [4.9, 52.0], [5.0, 54.0], [5.1, 54.0], [5.2, 54.0], [5.3, 54.0], [5.4, 54.0], [5.5, 54.0], [5.6, 54.0], [5.7, 54.0], [5.8, 54.0], [5.9, 54.0], [6.0, 57.0], [6.1, 57.0], [6.2, 57.0], [6.3, 57.0], [6.4, 57.0], [6.5, 57.0], [6.6, 57.0], [6.7, 57.0], [6.8, 57.0], [6.9, 57.0], [7.0, 58.0], [7.1, 58.0], [7.2, 58.0], [7.3, 58.0], [7.4, 58.0], [7.5, 58.0], [7.6, 58.0], [7.7, 58.0], [7.8, 58.0], [7.9, 58.0], [8.0, 58.0], [8.1, 58.0], [8.2, 58.0], [8.3, 58.0], [8.4, 58.0], [8.5, 58.0], [8.6, 58.0], [8.7, 58.0], [8.8, 58.0], [8.9, 58.0], [9.0, 60.0], [9.1, 60.0], [9.2, 60.0], [9.3, 60.0], [9.4, 60.0], [9.5, 60.0], [9.6, 60.0], [9.7, 60.0], [9.8, 60.0], [9.9, 60.0], [10.0, 62.0], [10.1, 62.0], [10.2, 62.0], [10.3, 62.0], [10.4, 62.0], [10.5, 62.0], [10.6, 62.0], [10.7, 62.0], [10.8, 62.0], [10.9, 62.0], [11.0, 62.0], [11.1, 62.0], [11.2, 62.0], [11.3, 62.0], [11.4, 62.0], [11.5, 62.0], [11.6, 62.0], [11.7, 62.0], [11.8, 62.0], [11.9, 62.0], [12.0, 63.0], [12.1, 63.0], [12.2, 63.0], [12.3, 63.0], [12.4, 63.0], [12.5, 63.0], [12.6, 63.0], [12.7, 63.0], [12.8, 63.0], [12.9, 63.0], [13.0, 64.0], [13.1, 64.0], [13.2, 64.0], [13.3, 64.0], [13.4, 64.0], [13.5, 64.0], [13.6, 64.0], [13.7, 64.0], [13.8, 64.0], [13.9, 64.0], [14.0, 64.0], [14.1, 64.0], [14.2, 64.0], [14.3, 64.0], [14.4, 64.0], [14.5, 64.0], [14.6, 64.0], [14.7, 64.0], [14.8, 64.0], [14.9, 64.0], [15.0, 71.0], [15.1, 71.0], [15.2, 71.0], [15.3, 71.0], [15.4, 71.0], [15.5, 71.0], [15.6, 71.0], [15.7, 71.0], [15.8, 71.0], [15.9, 71.0], [16.0, 73.0], [16.1, 73.0], [16.2, 73.0], [16.3, 73.0], [16.4, 73.0], [16.5, 73.0], [16.6, 73.0], [16.7, 73.0], [16.8, 73.0], [16.9, 73.0], [17.0, 80.0], [17.1, 80.0], [17.2, 80.0], [17.3, 80.0], [17.4, 80.0], [17.5, 80.0], [17.6, 80.0], [17.7, 80.0], [17.8, 80.0], [17.9, 80.0], [18.0, 82.0], [18.1, 82.0], [18.2, 82.0], [18.3, 82.0], [18.4, 82.0], [18.5, 82.0], [18.6, 82.0], [18.7, 82.0], [18.8, 82.0], [18.9, 82.0], [19.0, 82.0], [19.1, 82.0], [19.2, 82.0], [19.3, 82.0], [19.4, 82.0], [19.5, 82.0], [19.6, 82.0], [19.7, 82.0], [19.8, 82.0], [19.9, 82.0], [20.0, 84.0], [20.1, 84.0], [20.2, 84.0], [20.3, 84.0], [20.4, 84.0], [20.5, 84.0], [20.6, 84.0], [20.7, 84.0], [20.8, 84.0], [20.9, 84.0], [21.0, 87.0], [21.1, 87.0], [21.2, 87.0], [21.3, 87.0], [21.4, 87.0], [21.5, 87.0], [21.6, 87.0], [21.7, 87.0], [21.8, 87.0], [21.9, 87.0], [22.0, 87.0], [22.1, 87.0], [22.2, 87.0], [22.3, 87.0], [22.4, 87.0], [22.5, 87.0], [22.6, 87.0], [22.7, 87.0], [22.8, 87.0], [22.9, 87.0], [23.0, 89.0], [23.1, 89.0], [23.2, 89.0], [23.3, 89.0], [23.4, 89.0], [23.5, 89.0], [23.6, 89.0], [23.7, 89.0], [23.8, 89.0], [23.9, 89.0], [24.0, 90.0], [24.1, 90.0], [24.2, 90.0], [24.3, 90.0], [24.4, 90.0], [24.5, 90.0], [24.6, 90.0], [24.7, 90.0], [24.8, 90.0], [24.9, 90.0], [25.0, 93.0], [25.1, 93.0], [25.2, 93.0], [25.3, 93.0], [25.4, 93.0], [25.5, 93.0], [25.6, 93.0], [25.7, 93.0], [25.8, 93.0], [25.9, 93.0], [26.0, 97.0], [26.1, 97.0], [26.2, 97.0], [26.3, 97.0], [26.4, 97.0], [26.5, 97.0], [26.6, 97.0], [26.7, 97.0], [26.8, 97.0], [26.9, 97.0], [27.0, 106.0], [27.1, 106.0], [27.2, 106.0], [27.3, 106.0], [27.4, 106.0], [27.5, 106.0], [27.6, 106.0], [27.7, 106.0], [27.8, 106.0], [27.9, 106.0], [28.0, 108.0], [28.1, 108.0], [28.2, 108.0], [28.3, 108.0], [28.4, 108.0], [28.5, 108.0], [28.6, 108.0], [28.7, 108.0], [28.8, 108.0], [28.9, 108.0], [29.0, 110.0], [29.1, 110.0], [29.2, 110.0], [29.3, 110.0], [29.4, 110.0], [29.5, 110.0], [29.6, 110.0], [29.7, 110.0], [29.8, 110.0], [29.9, 110.0], [30.0, 117.0], [30.1, 117.0], [30.2, 117.0], [30.3, 117.0], [30.4, 117.0], [30.5, 117.0], [30.6, 117.0], [30.7, 117.0], [30.8, 117.0], [30.9, 117.0], [31.0, 122.0], [31.1, 122.0], [31.2, 122.0], [31.3, 122.0], [31.4, 122.0], [31.5, 122.0], [31.6, 122.0], [31.7, 122.0], [31.8, 122.0], [31.9, 122.0], [32.0, 123.0], [32.1, 123.0], [32.2, 123.0], [32.3, 123.0], [32.4, 123.0], [32.5, 123.0], [32.6, 123.0], [32.7, 123.0], [32.8, 123.0], [32.9, 123.0], [33.0, 124.0], [33.1, 124.0], [33.2, 124.0], [33.3, 124.0], [33.4, 124.0], [33.5, 124.0], [33.6, 124.0], [33.7, 124.0], [33.8, 124.0], [33.9, 124.0], [34.0, 128.0], [34.1, 128.0], [34.2, 128.0], [34.3, 128.0], [34.4, 128.0], [34.5, 128.0], [34.6, 128.0], [34.7, 128.0], [34.8, 128.0], [34.9, 128.0], [35.0, 132.0], [35.1, 132.0], [35.2, 132.0], [35.3, 132.0], [35.4, 132.0], [35.5, 132.0], [35.6, 132.0], [35.7, 132.0], [35.8, 132.0], [35.9, 132.0], [36.0, 141.0], [36.1, 141.0], [36.2, 141.0], [36.3, 141.0], [36.4, 141.0], [36.5, 141.0], [36.6, 141.0], [36.7, 141.0], [36.8, 141.0], [36.9, 141.0], [37.0, 142.0], [37.1, 142.0], [37.2, 142.0], [37.3, 142.0], [37.4, 142.0], [37.5, 142.0], [37.6, 142.0], [37.7, 142.0], [37.8, 142.0], [37.9, 142.0], [38.0, 143.0], [38.1, 143.0], [38.2, 143.0], [38.3, 143.0], [38.4, 143.0], [38.5, 143.0], [38.6, 143.0], [38.7, 143.0], [38.8, 143.0], [38.9, 143.0], [39.0, 144.0], [39.1, 144.0], [39.2, 144.0], [39.3, 144.0], [39.4, 144.0], [39.5, 144.0], [39.6, 144.0], [39.7, 144.0], [39.8, 144.0], [39.9, 144.0], [40.0, 160.0], [40.1, 160.0], [40.2, 160.0], [40.3, 160.0], [40.4, 160.0], [40.5, 160.0], [40.6, 160.0], [40.7, 160.0], [40.8, 160.0], [40.9, 160.0], [41.0, 166.0], [41.1, 166.0], [41.2, 166.0], [41.3, 166.0], [41.4, 166.0], [41.5, 166.0], [41.6, 166.0], [41.7, 166.0], [41.8, 166.0], [41.9, 166.0], [42.0, 180.0], [42.1, 180.0], [42.2, 180.0], [42.3, 180.0], [42.4, 180.0], [42.5, 180.0], [42.6, 180.0], [42.7, 180.0], [42.8, 180.0], [42.9, 180.0], [43.0, 181.0], [43.1, 181.0], [43.2, 181.0], [43.3, 181.0], [43.4, 181.0], [43.5, 181.0], [43.6, 181.0], [43.7, 181.0], [43.8, 181.0], [43.9, 181.0], [44.0, 184.0], [44.1, 184.0], [44.2, 184.0], [44.3, 184.0], [44.4, 184.0], [44.5, 184.0], [44.6, 184.0], [44.7, 184.0], [44.8, 184.0], [44.9, 184.0], [45.0, 188.0], [45.1, 188.0], [45.2, 188.0], [45.3, 188.0], [45.4, 188.0], [45.5, 188.0], [45.6, 188.0], [45.7, 188.0], [45.8, 188.0], [45.9, 188.0], [46.0, 190.0], [46.1, 190.0], [46.2, 190.0], [46.3, 190.0], [46.4, 190.0], [46.5, 190.0], [46.6, 190.0], [46.7, 190.0], [46.8, 190.0], [46.9, 190.0], [47.0, 204.0], [47.1, 204.0], [47.2, 204.0], [47.3, 204.0], [47.4, 204.0], [47.5, 204.0], [47.6, 204.0], [47.7, 204.0], [47.8, 204.0], [47.9, 204.0], [48.0, 204.0], [48.1, 204.0], [48.2, 204.0], [48.3, 204.0], [48.4, 204.0], [48.5, 204.0], [48.6, 204.0], [48.7, 204.0], [48.8, 204.0], [48.9, 204.0], [49.0, 233.0], [49.1, 233.0], [49.2, 233.0], [49.3, 233.0], [49.4, 233.0], [49.5, 233.0], [49.6, 233.0], [49.7, 233.0], [49.8, 233.0], [49.9, 233.0], [50.0, 238.0], [50.1, 238.0], [50.2, 238.0], [50.3, 238.0], [50.4, 238.0], [50.5, 238.0], [50.6, 238.0], [50.7, 238.0], [50.8, 238.0], [50.9, 238.0], [51.0, 278.0], [51.1, 278.0], [51.2, 278.0], [51.3, 278.0], [51.4, 278.0], [51.5, 278.0], [51.6, 278.0], [51.7, 278.0], [51.8, 278.0], [51.9, 278.0], [52.0, 285.0], [52.1, 285.0], [52.2, 285.0], [52.3, 285.0], [52.4, 285.0], [52.5, 285.0], [52.6, 285.0], [52.7, 285.0], [52.8, 285.0], [52.9, 285.0], [53.0, 300.0], [53.1, 300.0], [53.2, 300.0], [53.3, 300.0], [53.4, 300.0], [53.5, 300.0], [53.6, 300.0], [53.7, 300.0], [53.8, 300.0], [53.9, 300.0], [54.0, 304.0], [54.1, 304.0], [54.2, 304.0], [54.3, 304.0], [54.4, 304.0], [54.5, 304.0], [54.6, 304.0], [54.7, 304.0], [54.8, 304.0], [54.9, 304.0], [55.0, 335.0], [55.1, 335.0], [55.2, 335.0], [55.3, 335.0], [55.4, 335.0], [55.5, 335.0], [55.6, 335.0], [55.7, 335.0], [55.8, 335.0], [55.9, 335.0], [56.0, 342.0], [56.1, 342.0], [56.2, 342.0], [56.3, 342.0], [56.4, 342.0], [56.5, 342.0], [56.6, 342.0], [56.7, 342.0], [56.8, 342.0], [56.9, 342.0], [57.0, 344.0], [57.1, 344.0], [57.2, 344.0], [57.3, 344.0], [57.4, 344.0], [57.5, 344.0], [57.6, 344.0], [57.7, 344.0], [57.8, 344.0], [57.9, 344.0], [58.0, 353.0], [58.1, 353.0], [58.2, 353.0], [58.3, 353.0], [58.4, 353.0], [58.5, 353.0], [58.6, 353.0], [58.7, 353.0], [58.8, 353.0], [58.9, 353.0], [59.0, 355.0], [59.1, 355.0], [59.2, 355.0], [59.3, 355.0], [59.4, 355.0], [59.5, 355.0], [59.6, 355.0], [59.7, 355.0], [59.8, 355.0], [59.9, 355.0], [60.0, 413.0], [60.1, 413.0], [60.2, 413.0], [60.3, 413.0], [60.4, 413.0], [60.5, 413.0], [60.6, 413.0], [60.7, 413.0], [60.8, 413.0], [60.9, 413.0], [61.0, 428.0], [61.1, 428.0], [61.2, 428.0], [61.3, 428.0], [61.4, 428.0], [61.5, 428.0], [61.6, 428.0], [61.7, 428.0], [61.8, 428.0], [61.9, 428.0], [62.0, 445.0], [62.1, 445.0], [62.2, 445.0], [62.3, 445.0], [62.4, 445.0], [62.5, 445.0], [62.6, 445.0], [62.7, 445.0], [62.8, 445.0], [62.9, 445.0], [63.0, 452.0], [63.1, 452.0], [63.2, 452.0], [63.3, 452.0], [63.4, 452.0], [63.5, 452.0], [63.6, 452.0], [63.7, 452.0], [63.8, 452.0], [63.9, 452.0], [64.0, 500.0], [64.1, 500.0], [64.2, 500.0], [64.3, 500.0], [64.4, 500.0], [64.5, 500.0], [64.6, 500.0], [64.7, 500.0], [64.8, 500.0], [64.9, 500.0], [65.0, 501.0], [65.1, 501.0], [65.2, 501.0], [65.3, 501.0], [65.4, 501.0], [65.5, 501.0], [65.6, 501.0], [65.7, 501.0], [65.8, 501.0], [65.9, 501.0], [66.0, 532.0], [66.1, 532.0], [66.2, 532.0], [66.3, 532.0], [66.4, 532.0], [66.5, 532.0], [66.6, 532.0], [66.7, 532.0], [66.8, 532.0], [66.9, 532.0], [67.0, 586.0], [67.1, 586.0], [67.2, 586.0], [67.3, 586.0], [67.4, 586.0], [67.5, 586.0], [67.6, 586.0], [67.7, 586.0], [67.8, 586.0], [67.9, 586.0], [68.0, 586.0], [68.1, 586.0], [68.2, 586.0], [68.3, 586.0], [68.4, 586.0], [68.5, 586.0], [68.6, 586.0], [68.7, 586.0], [68.8, 586.0], [68.9, 586.0], [69.0, 603.0], [69.1, 603.0], [69.2, 603.0], [69.3, 603.0], [69.4, 603.0], [69.5, 603.0], [69.6, 603.0], [69.7, 603.0], [69.8, 603.0], [69.9, 603.0], [70.0, 627.0], [70.1, 627.0], [70.2, 627.0], [70.3, 627.0], [70.4, 627.0], [70.5, 627.0], [70.6, 627.0], [70.7, 627.0], [70.8, 627.0], [70.9, 627.0], [71.0, 631.0], [71.1, 631.0], [71.2, 631.0], [71.3, 631.0], [71.4, 631.0], [71.5, 631.0], [71.6, 631.0], [71.7, 631.0], [71.8, 631.0], [71.9, 631.0], [72.0, 634.0], [72.1, 634.0], [72.2, 634.0], [72.3, 634.0], [72.4, 634.0], [72.5, 634.0], [72.6, 634.0], [72.7, 634.0], [72.8, 634.0], [72.9, 634.0], [73.0, 648.0], [73.1, 648.0], [73.2, 648.0], [73.3, 648.0], [73.4, 648.0], [73.5, 648.0], [73.6, 648.0], [73.7, 648.0], [73.8, 648.0], [73.9, 648.0], [74.0, 661.0], [74.1, 661.0], [74.2, 661.0], [74.3, 661.0], [74.4, 661.0], [74.5, 661.0], [74.6, 661.0], [74.7, 661.0], [74.8, 661.0], [74.9, 661.0], [75.0, 661.0], [75.1, 661.0], [75.2, 661.0], [75.3, 661.0], [75.4, 661.0], [75.5, 661.0], [75.6, 661.0], [75.7, 661.0], [75.8, 661.0], [75.9, 661.0], [76.0, 699.0], [76.1, 699.0], [76.2, 699.0], [76.3, 699.0], [76.4, 699.0], [76.5, 699.0], [76.6, 699.0], [76.7, 699.0], [76.8, 699.0], [76.9, 699.0], [77.0, 711.0], [77.1, 711.0], [77.2, 711.0], [77.3, 711.0], [77.4, 711.0], [77.5, 711.0], [77.6, 711.0], [77.7, 711.0], [77.8, 711.0], [77.9, 711.0], [78.0, 783.0], [78.1, 783.0], [78.2, 783.0], [78.3, 783.0], [78.4, 783.0], [78.5, 783.0], [78.6, 783.0], [78.7, 783.0], [78.8, 783.0], [78.9, 783.0], [79.0, 786.0], [79.1, 786.0], [79.2, 786.0], [79.3, 786.0], [79.4, 786.0], [79.5, 786.0], [79.6, 786.0], [79.7, 786.0], [79.8, 786.0], [79.9, 786.0], [80.0, 825.0], [80.1, 825.0], [80.2, 825.0], [80.3, 825.0], [80.4, 825.0], [80.5, 825.0], [80.6, 825.0], [80.7, 825.0], [80.8, 825.0], [80.9, 825.0], [81.0, 855.0], [81.1, 855.0], [81.2, 855.0], [81.3, 855.0], [81.4, 855.0], [81.5, 855.0], [81.6, 855.0], [81.7, 855.0], [81.8, 855.0], [81.9, 855.0], [82.0, 911.0], [82.1, 911.0], [82.2, 911.0], [82.3, 911.0], [82.4, 911.0], [82.5, 911.0], [82.6, 911.0], [82.7, 911.0], [82.8, 911.0], [82.9, 911.0], [83.0, 926.0], [83.1, 926.0], [83.2, 926.0], [83.3, 926.0], [83.4, 926.0], [83.5, 926.0], [83.6, 926.0], [83.7, 926.0], [83.8, 926.0], [83.9, 926.0], [84.0, 946.0], [84.1, 946.0], [84.2, 946.0], [84.3, 946.0], [84.4, 946.0], [84.5, 946.0], [84.6, 946.0], [84.7, 946.0], [84.8, 946.0], [84.9, 946.0], [85.0, 965.0], [85.1, 965.0], [85.2, 965.0], [85.3, 965.0], [85.4, 965.0], [85.5, 965.0], [85.6, 965.0], [85.7, 965.0], [85.8, 965.0], [85.9, 965.0], [86.0, 1046.0], [86.1, 1046.0], [86.2, 1046.0], [86.3, 1046.0], [86.4, 1046.0], [86.5, 1046.0], [86.6, 1046.0], [86.7, 1046.0], [86.8, 1046.0], [86.9, 1046.0], [87.0, 1143.0], [87.1, 1143.0], [87.2, 1143.0], [87.3, 1143.0], [87.4, 1143.0], [87.5, 1143.0], [87.6, 1143.0], [87.7, 1143.0], [87.8, 1143.0], [87.9, 1143.0], [88.0, 1159.0], [88.1, 1159.0], [88.2, 1159.0], [88.3, 1159.0], [88.4, 1159.0], [88.5, 1159.0], [88.6, 1159.0], [88.7, 1159.0], [88.8, 1159.0], [88.9, 1159.0], [89.0, 1272.0], [89.1, 1272.0], [89.2, 1272.0], [89.3, 1272.0], [89.4, 1272.0], [89.5, 1272.0], [89.6, 1272.0], [89.7, 1272.0], [89.8, 1272.0], [89.9, 1272.0], [90.0, 1273.0], [90.1, 1273.0], [90.2, 1273.0], [90.3, 1273.0], [90.4, 1273.0], [90.5, 1273.0], [90.6, 1273.0], [90.7, 1273.0], [90.8, 1273.0], [90.9, 1273.0], [91.0, 1405.0], [91.1, 1405.0], [91.2, 1405.0], [91.3, 1405.0], [91.4, 1405.0], [91.5, 1405.0], [91.6, 1405.0], [91.7, 1405.0], [91.8, 1405.0], [91.9, 1405.0], [92.0, 1492.0], [92.1, 1492.0], [92.2, 1492.0], [92.3, 1492.0], [92.4, 1492.0], [92.5, 1492.0], [92.6, 1492.0], [92.7, 1492.0], [92.8, 1492.0], [92.9, 1492.0], [93.0, 1520.0], [93.1, 1520.0], [93.2, 1520.0], [93.3, 1520.0], [93.4, 1520.0], [93.5, 1520.0], [93.6, 1520.0], [93.7, 1520.0], [93.8, 1520.0], [93.9, 1520.0], [94.0, 1583.0], [94.1, 1583.0], [94.2, 1583.0], [94.3, 1583.0], [94.4, 1583.0], [94.5, 1583.0], [94.6, 1583.0], [94.7, 1583.0], [94.8, 1583.0], [94.9, 1583.0], [95.0, 1701.0], [95.1, 1701.0], [95.2, 1701.0], [95.3, 1701.0], [95.4, 1701.0], [95.5, 1701.0], [95.6, 1701.0], [95.7, 1701.0], [95.8, 1701.0], [95.9, 1701.0], [96.0, 2057.0], [96.1, 2057.0], [96.2, 2057.0], [96.3, 2057.0], [96.4, 2057.0], [96.5, 2057.0], [96.6, 2057.0], [96.7, 2057.0], [96.8, 2057.0], [96.9, 2057.0], [97.0, 2200.0], [97.1, 2200.0], [97.2, 2200.0], [97.3, 2200.0], [97.4, 2200.0], [97.5, 2200.0], [97.6, 2200.0], [97.7, 2200.0], [97.8, 2200.0], [97.9, 2200.0], [98.0, 2240.0], [98.1, 2240.0], [98.2, 2240.0], [98.3, 2240.0], [98.4, 2240.0], [98.5, 2240.0], [98.6, 2240.0], [98.7, 2240.0], [98.8, 2240.0], [98.9, 2240.0], [99.0, 4195.0], [99.1, 4195.0], [99.2, 4195.0], [99.3, 4195.0], [99.4, 4195.0], [99.5, 4195.0], [99.6, 4195.0], [99.7, 4195.0], [99.8, 4195.0], [99.9, 4195.0]], "isOverall": false, "label": "Q3", "isController": false}, {"data": [[0.0, 253.0], [0.1, 253.0], [0.2, 253.0], [0.3, 253.0], [0.4, 253.0], [0.5, 253.0], [0.6, 253.0], [0.7, 253.0], [0.8, 253.0], [0.9, 253.0], [1.0, 253.0], [1.1, 253.0], [1.2, 253.0], [1.3, 253.0], [1.4, 253.0], [1.5, 253.0], [1.6, 253.0], [1.7, 253.0], [1.8, 253.0], [1.9, 253.0], [2.0, 253.0], [2.1, 253.0], [2.2, 253.0], [2.3, 253.0], [2.4, 253.0], [2.5, 278.0], [2.6, 278.0], [2.7, 278.0], [2.8, 278.0], [2.9, 278.0], [3.0, 278.0], [3.1, 278.0], [3.2, 278.0], [3.3, 278.0], [3.4, 278.0], [3.5, 278.0], [3.6, 278.0], [3.7, 278.0], [3.8, 278.0], [3.9, 278.0], [4.0, 278.0], [4.1, 278.0], [4.2, 278.0], [4.3, 278.0], [4.4, 278.0], [4.5, 278.0], [4.6, 278.0], [4.7, 278.0], [4.8, 278.0], [4.9, 278.0], [5.0, 290.0], [5.1, 290.0], [5.2, 290.0], [5.3, 290.0], [5.4, 290.0], [5.5, 290.0], [5.6, 290.0], [5.7, 290.0], [5.8, 290.0], [5.9, 290.0], [6.0, 290.0], [6.1, 290.0], [6.2, 290.0], [6.3, 290.0], [6.4, 290.0], [6.5, 290.0], [6.6, 290.0], [6.7, 290.0], [6.8, 290.0], [6.9, 290.0], [7.0, 290.0], [7.1, 290.0], [7.2, 290.0], [7.3, 290.0], [7.4, 290.0], [7.5, 320.0], [7.6, 320.0], [7.7, 320.0], [7.8, 320.0], [7.9, 320.0], [8.0, 320.0], [8.1, 320.0], [8.2, 320.0], [8.3, 320.0], [8.4, 320.0], [8.5, 320.0], [8.6, 320.0], [8.7, 320.0], [8.8, 320.0], [8.9, 320.0], [9.0, 320.0], [9.1, 320.0], [9.2, 320.0], [9.3, 320.0], [9.4, 320.0], [9.5, 320.0], [9.6, 320.0], [9.7, 320.0], [9.8, 320.0], [9.9, 320.0], [10.0, 327.0], [10.1, 327.0], [10.2, 327.0], [10.3, 327.0], [10.4, 327.0], [10.5, 327.0], [10.6, 327.0], [10.7, 327.0], [10.8, 327.0], [10.9, 327.0], [11.0, 327.0], [11.1, 327.0], [11.2, 327.0], [11.3, 327.0], [11.4, 327.0], [11.5, 327.0], [11.6, 327.0], [11.7, 327.0], [11.8, 327.0], [11.9, 327.0], [12.0, 327.0], [12.1, 327.0], [12.2, 327.0], [12.3, 327.0], [12.4, 327.0], [12.5, 341.0], [12.6, 341.0], [12.7, 341.0], [12.8, 341.0], [12.9, 341.0], [13.0, 341.0], [13.1, 341.0], [13.2, 341.0], [13.3, 341.0], [13.4, 341.0], [13.5, 341.0], [13.6, 341.0], [13.7, 341.0], [13.8, 341.0], [13.9, 341.0], [14.0, 341.0], [14.1, 341.0], [14.2, 341.0], [14.3, 341.0], [14.4, 341.0], [14.5, 341.0], [14.6, 341.0], [14.7, 341.0], [14.8, 341.0], [14.9, 341.0], [15.0, 383.0], [15.1, 383.0], [15.2, 383.0], [15.3, 383.0], [15.4, 383.0], [15.5, 383.0], [15.6, 383.0], [15.7, 383.0], [15.8, 383.0], [15.9, 383.0], [16.0, 383.0], [16.1, 383.0], [16.2, 383.0], [16.3, 383.0], [16.4, 383.0], [16.5, 383.0], [16.6, 383.0], [16.7, 383.0], [16.8, 383.0], [16.9, 383.0], [17.0, 383.0], [17.1, 383.0], [17.2, 383.0], [17.3, 383.0], [17.4, 383.0], [17.5, 497.0], [17.6, 497.0], [17.7, 497.0], [17.8, 497.0], [17.9, 497.0], [18.0, 497.0], [18.1, 497.0], [18.2, 497.0], [18.3, 497.0], [18.4, 497.0], [18.5, 497.0], [18.6, 497.0], [18.7, 497.0], [18.8, 497.0], [18.9, 497.0], [19.0, 497.0], [19.1, 497.0], [19.2, 497.0], [19.3, 497.0], [19.4, 497.0], [19.5, 497.0], [19.6, 497.0], [19.7, 497.0], [19.8, 497.0], [19.9, 497.0], [20.0, 557.0], [20.1, 557.0], [20.2, 557.0], [20.3, 557.0], [20.4, 557.0], [20.5, 557.0], [20.6, 557.0], [20.7, 557.0], [20.8, 557.0], [20.9, 557.0], [21.0, 557.0], [21.1, 557.0], [21.2, 557.0], [21.3, 557.0], [21.4, 557.0], [21.5, 557.0], [21.6, 557.0], [21.7, 557.0], [21.8, 557.0], [21.9, 557.0], [22.0, 557.0], [22.1, 557.0], [22.2, 557.0], [22.3, 557.0], [22.4, 557.0], [22.5, 560.0], [22.6, 560.0], [22.7, 560.0], [22.8, 560.0], [22.9, 560.0], [23.0, 560.0], [23.1, 560.0], [23.2, 560.0], [23.3, 560.0], [23.4, 560.0], [23.5, 560.0], [23.6, 560.0], [23.7, 560.0], [23.8, 560.0], [23.9, 560.0], [24.0, 560.0], [24.1, 560.0], [24.2, 560.0], [24.3, 560.0], [24.4, 560.0], [24.5, 560.0], [24.6, 560.0], [24.7, 560.0], [24.8, 560.0], [24.9, 560.0], [25.0, 599.0], [25.1, 599.0], [25.2, 599.0], [25.3, 599.0], [25.4, 599.0], [25.5, 599.0], [25.6, 599.0], [25.7, 599.0], [25.8, 599.0], [25.9, 599.0], [26.0, 599.0], [26.1, 599.0], [26.2, 599.0], [26.3, 599.0], [26.4, 599.0], [26.5, 599.0], [26.6, 599.0], [26.7, 599.0], [26.8, 599.0], [26.9, 599.0], [27.0, 599.0], [27.1, 599.0], [27.2, 599.0], [27.3, 599.0], [27.4, 599.0], [27.5, 687.0], [27.6, 687.0], [27.7, 687.0], [27.8, 687.0], [27.9, 687.0], [28.0, 687.0], [28.1, 687.0], [28.2, 687.0], [28.3, 687.0], [28.4, 687.0], [28.5, 687.0], [28.6, 687.0], [28.7, 687.0], [28.8, 687.0], [28.9, 687.0], [29.0, 687.0], [29.1, 687.0], [29.2, 687.0], [29.3, 687.0], [29.4, 687.0], [29.5, 687.0], [29.6, 687.0], [29.7, 687.0], [29.8, 687.0], [29.9, 687.0], [30.0, 728.0], [30.1, 728.0], [30.2, 728.0], [30.3, 728.0], [30.4, 728.0], [30.5, 728.0], [30.6, 728.0], [30.7, 728.0], [30.8, 728.0], [30.9, 728.0], [31.0, 728.0], [31.1, 728.0], [31.2, 728.0], [31.3, 728.0], [31.4, 728.0], [31.5, 728.0], [31.6, 728.0], [31.7, 728.0], [31.8, 728.0], [31.9, 728.0], [32.0, 728.0], [32.1, 728.0], [32.2, 728.0], [32.3, 728.0], [32.4, 728.0], [32.5, 817.0], [32.6, 817.0], [32.7, 817.0], [32.8, 817.0], [32.9, 817.0], [33.0, 817.0], [33.1, 817.0], [33.2, 817.0], [33.3, 817.0], [33.4, 817.0], [33.5, 817.0], [33.6, 817.0], [33.7, 817.0], [33.8, 817.0], [33.9, 817.0], [34.0, 817.0], [34.1, 817.0], [34.2, 817.0], [34.3, 817.0], [34.4, 817.0], [34.5, 817.0], [34.6, 817.0], [34.7, 817.0], [34.8, 817.0], [34.9, 817.0], [35.0, 948.0], [35.1, 948.0], [35.2, 948.0], [35.3, 948.0], [35.4, 948.0], [35.5, 948.0], [35.6, 948.0], [35.7, 948.0], [35.8, 948.0], [35.9, 948.0], [36.0, 948.0], [36.1, 948.0], [36.2, 948.0], [36.3, 948.0], [36.4, 948.0], [36.5, 948.0], [36.6, 948.0], [36.7, 948.0], [36.8, 948.0], [36.9, 948.0], [37.0, 948.0], [37.1, 948.0], [37.2, 948.0], [37.3, 948.0], [37.4, 948.0], [37.5, 1083.0], [37.6, 1083.0], [37.7, 1083.0], [37.8, 1083.0], [37.9, 1083.0], [38.0, 1083.0], [38.1, 1083.0], [38.2, 1083.0], [38.3, 1083.0], [38.4, 1083.0], [38.5, 1083.0], [38.6, 1083.0], [38.7, 1083.0], [38.8, 1083.0], [38.9, 1083.0], [39.0, 1083.0], [39.1, 1083.0], [39.2, 1083.0], [39.3, 1083.0], [39.4, 1083.0], [39.5, 1083.0], [39.6, 1083.0], [39.7, 1083.0], [39.8, 1083.0], [39.9, 1083.0], [40.0, 1089.0], [40.1, 1089.0], [40.2, 1089.0], [40.3, 1089.0], [40.4, 1089.0], [40.5, 1089.0], [40.6, 1089.0], [40.7, 1089.0], [40.8, 1089.0], [40.9, 1089.0], [41.0, 1089.0], [41.1, 1089.0], [41.2, 1089.0], [41.3, 1089.0], [41.4, 1089.0], [41.5, 1089.0], [41.6, 1089.0], [41.7, 1089.0], [41.8, 1089.0], [41.9, 1089.0], [42.0, 1089.0], [42.1, 1089.0], [42.2, 1089.0], [42.3, 1089.0], [42.4, 1089.0], [42.5, 1109.0], [42.6, 1109.0], [42.7, 1109.0], [42.8, 1109.0], [42.9, 1109.0], [43.0, 1109.0], [43.1, 1109.0], [43.2, 1109.0], [43.3, 1109.0], [43.4, 1109.0], [43.5, 1109.0], [43.6, 1109.0], [43.7, 1109.0], [43.8, 1109.0], [43.9, 1109.0], [44.0, 1109.0], [44.1, 1109.0], [44.2, 1109.0], [44.3, 1109.0], [44.4, 1109.0], [44.5, 1109.0], [44.6, 1109.0], [44.7, 1109.0], [44.8, 1109.0], [44.9, 1109.0], [45.0, 1114.0], [45.1, 1114.0], [45.2, 1114.0], [45.3, 1114.0], [45.4, 1114.0], [45.5, 1114.0], [45.6, 1114.0], [45.7, 1114.0], [45.8, 1114.0], [45.9, 1114.0], [46.0, 1114.0], [46.1, 1114.0], [46.2, 1114.0], [46.3, 1114.0], [46.4, 1114.0], [46.5, 1114.0], [46.6, 1114.0], [46.7, 1114.0], [46.8, 1114.0], [46.9, 1114.0], [47.0, 1114.0], [47.1, 1114.0], [47.2, 1114.0], [47.3, 1114.0], [47.4, 1114.0], [47.5, 1213.0], [47.6, 1213.0], [47.7, 1213.0], [47.8, 1213.0], [47.9, 1213.0], [48.0, 1213.0], [48.1, 1213.0], [48.2, 1213.0], [48.3, 1213.0], [48.4, 1213.0], [48.5, 1213.0], [48.6, 1213.0], [48.7, 1213.0], [48.8, 1213.0], [48.9, 1213.0], [49.0, 1213.0], [49.1, 1213.0], [49.2, 1213.0], [49.3, 1213.0], [49.4, 1213.0], [49.5, 1213.0], [49.6, 1213.0], [49.7, 1213.0], [49.8, 1213.0], [49.9, 1213.0], [50.0, 1223.0], [50.1, 1223.0], [50.2, 1223.0], [50.3, 1223.0], [50.4, 1223.0], [50.5, 1223.0], [50.6, 1223.0], [50.7, 1223.0], [50.8, 1223.0], [50.9, 1223.0], [51.0, 1223.0], [51.1, 1223.0], [51.2, 1223.0], [51.3, 1223.0], [51.4, 1223.0], [51.5, 1223.0], [51.6, 1223.0], [51.7, 1223.0], [51.8, 1223.0], [51.9, 1223.0], [52.0, 1223.0], [52.1, 1223.0], [52.2, 1223.0], [52.3, 1223.0], [52.4, 1223.0], [52.5, 1281.0], [52.6, 1281.0], [52.7, 1281.0], [52.8, 1281.0], [52.9, 1281.0], [53.0, 1281.0], [53.1, 1281.0], [53.2, 1281.0], [53.3, 1281.0], [53.4, 1281.0], [53.5, 1281.0], [53.6, 1281.0], [53.7, 1281.0], [53.8, 1281.0], [53.9, 1281.0], [54.0, 1281.0], [54.1, 1281.0], [54.2, 1281.0], [54.3, 1281.0], [54.4, 1281.0], [54.5, 1281.0], [54.6, 1281.0], [54.7, 1281.0], [54.8, 1281.0], [54.9, 1281.0], [55.0, 1340.0], [55.1, 1340.0], [55.2, 1340.0], [55.3, 1340.0], [55.4, 1340.0], [55.5, 1340.0], [55.6, 1340.0], [55.7, 1340.0], [55.8, 1340.0], [55.9, 1340.0], [56.0, 1340.0], [56.1, 1340.0], [56.2, 1340.0], [56.3, 1340.0], [56.4, 1340.0], [56.5, 1340.0], [56.6, 1340.0], [56.7, 1340.0], [56.8, 1340.0], [56.9, 1340.0], [57.0, 1340.0], [57.1, 1340.0], [57.2, 1340.0], [57.3, 1340.0], [57.4, 1340.0], [57.5, 1445.0], [57.6, 1445.0], [57.7, 1445.0], [57.8, 1445.0], [57.9, 1445.0], [58.0, 1445.0], [58.1, 1445.0], [58.2, 1445.0], [58.3, 1445.0], [58.4, 1445.0], [58.5, 1445.0], [58.6, 1445.0], [58.7, 1445.0], [58.8, 1445.0], [58.9, 1445.0], [59.0, 1445.0], [59.1, 1445.0], [59.2, 1445.0], [59.3, 1445.0], [59.4, 1445.0], [59.5, 1445.0], [59.6, 1445.0], [59.7, 1445.0], [59.8, 1445.0], [59.9, 1445.0], [60.0, 1453.0], [60.1, 1453.0], [60.2, 1453.0], [60.3, 1453.0], [60.4, 1453.0], [60.5, 1453.0], [60.6, 1453.0], [60.7, 1453.0], [60.8, 1453.0], [60.9, 1453.0], [61.0, 1453.0], [61.1, 1453.0], [61.2, 1453.0], [61.3, 1453.0], [61.4, 1453.0], [61.5, 1453.0], [61.6, 1453.0], [61.7, 1453.0], [61.8, 1453.0], [61.9, 1453.0], [62.0, 1453.0], [62.1, 1453.0], [62.2, 1453.0], [62.3, 1453.0], [62.4, 1453.0], [62.5, 1965.0], [62.6, 1965.0], [62.7, 1965.0], [62.8, 1965.0], [62.9, 1965.0], [63.0, 1965.0], [63.1, 1965.0], [63.2, 1965.0], [63.3, 1965.0], [63.4, 1965.0], [63.5, 1965.0], [63.6, 1965.0], [63.7, 1965.0], [63.8, 1965.0], [63.9, 1965.0], [64.0, 1965.0], [64.1, 1965.0], [64.2, 1965.0], [64.3, 1965.0], [64.4, 1965.0], [64.5, 1965.0], [64.6, 1965.0], [64.7, 1965.0], [64.8, 1965.0], [64.9, 1965.0], [65.0, 2012.0], [65.1, 2012.0], [65.2, 2012.0], [65.3, 2012.0], [65.4, 2012.0], [65.5, 2012.0], [65.6, 2012.0], [65.7, 2012.0], [65.8, 2012.0], [65.9, 2012.0], [66.0, 2012.0], [66.1, 2012.0], [66.2, 2012.0], [66.3, 2012.0], [66.4, 2012.0], [66.5, 2012.0], [66.6, 2012.0], [66.7, 2012.0], [66.8, 2012.0], [66.9, 2012.0], [67.0, 2012.0], [67.1, 2012.0], [67.2, 2012.0], [67.3, 2012.0], [67.4, 2012.0], [67.5, 2029.0], [67.6, 2029.0], [67.7, 2029.0], [67.8, 2029.0], [67.9, 2029.0], [68.0, 2029.0], [68.1, 2029.0], [68.2, 2029.0], [68.3, 2029.0], [68.4, 2029.0], [68.5, 2029.0], [68.6, 2029.0], [68.7, 2029.0], [68.8, 2029.0], [68.9, 2029.0], [69.0, 2029.0], [69.1, 2029.0], [69.2, 2029.0], [69.3, 2029.0], [69.4, 2029.0], [69.5, 2029.0], [69.6, 2029.0], [69.7, 2029.0], [69.8, 2029.0], [69.9, 2029.0], [70.0, 2059.0], [70.1, 2059.0], [70.2, 2059.0], [70.3, 2059.0], [70.4, 2059.0], [70.5, 2059.0], [70.6, 2059.0], [70.7, 2059.0], [70.8, 2059.0], [70.9, 2059.0], [71.0, 2059.0], [71.1, 2059.0], [71.2, 2059.0], [71.3, 2059.0], [71.4, 2059.0], [71.5, 2059.0], [71.6, 2059.0], [71.7, 2059.0], [71.8, 2059.0], [71.9, 2059.0], [72.0, 2059.0], [72.1, 2059.0], [72.2, 2059.0], [72.3, 2059.0], [72.4, 2059.0], [72.5, 2140.0], [72.6, 2140.0], [72.7, 2140.0], [72.8, 2140.0], [72.9, 2140.0], [73.0, 2140.0], [73.1, 2140.0], [73.2, 2140.0], [73.3, 2140.0], [73.4, 2140.0], [73.5, 2140.0], [73.6, 2140.0], [73.7, 2140.0], [73.8, 2140.0], [73.9, 2140.0], [74.0, 2140.0], [74.1, 2140.0], [74.2, 2140.0], [74.3, 2140.0], [74.4, 2140.0], [74.5, 2140.0], [74.6, 2140.0], [74.7, 2140.0], [74.8, 2140.0], [74.9, 2140.0], [75.0, 2189.0], [75.1, 2189.0], [75.2, 2189.0], [75.3, 2189.0], [75.4, 2189.0], [75.5, 2189.0], [75.6, 2189.0], [75.7, 2189.0], [75.8, 2189.0], [75.9, 2189.0], [76.0, 2189.0], [76.1, 2189.0], [76.2, 2189.0], [76.3, 2189.0], [76.4, 2189.0], [76.5, 2189.0], [76.6, 2189.0], [76.7, 2189.0], [76.8, 2189.0], [76.9, 2189.0], [77.0, 2189.0], [77.1, 2189.0], [77.2, 2189.0], [77.3, 2189.0], [77.4, 2189.0], [77.5, 2300.0], [77.6, 2300.0], [77.7, 2300.0], [77.8, 2300.0], [77.9, 2300.0], [78.0, 2300.0], [78.1, 2300.0], [78.2, 2300.0], [78.3, 2300.0], [78.4, 2300.0], [78.5, 2300.0], [78.6, 2300.0], [78.7, 2300.0], [78.8, 2300.0], [78.9, 2300.0], [79.0, 2300.0], [79.1, 2300.0], [79.2, 2300.0], [79.3, 2300.0], [79.4, 2300.0], [79.5, 2300.0], [79.6, 2300.0], [79.7, 2300.0], [79.8, 2300.0], [79.9, 2300.0], [80.0, 2568.0], [80.1, 2568.0], [80.2, 2568.0], [80.3, 2568.0], [80.4, 2568.0], [80.5, 2568.0], [80.6, 2568.0], [80.7, 2568.0], [80.8, 2568.0], [80.9, 2568.0], [81.0, 2568.0], [81.1, 2568.0], [81.2, 2568.0], [81.3, 2568.0], [81.4, 2568.0], [81.5, 2568.0], [81.6, 2568.0], [81.7, 2568.0], [81.8, 2568.0], [81.9, 2568.0], [82.0, 2568.0], [82.1, 2568.0], [82.2, 2568.0], [82.3, 2568.0], [82.4, 2568.0], [82.5, 2640.0], [82.6, 2640.0], [82.7, 2640.0], [82.8, 2640.0], [82.9, 2640.0], [83.0, 2640.0], [83.1, 2640.0], [83.2, 2640.0], [83.3, 2640.0], [83.4, 2640.0], [83.5, 2640.0], [83.6, 2640.0], [83.7, 2640.0], [83.8, 2640.0], [83.9, 2640.0], [84.0, 2640.0], [84.1, 2640.0], [84.2, 2640.0], [84.3, 2640.0], [84.4, 2640.0], [84.5, 2640.0], [84.6, 2640.0], [84.7, 2640.0], [84.8, 2640.0], [84.9, 2640.0], [85.0, 2641.0], [85.1, 2641.0], [85.2, 2641.0], [85.3, 2641.0], [85.4, 2641.0], [85.5, 2641.0], [85.6, 2641.0], [85.7, 2641.0], [85.8, 2641.0], [85.9, 2641.0], [86.0, 2641.0], [86.1, 2641.0], [86.2, 2641.0], [86.3, 2641.0], [86.4, 2641.0], [86.5, 2641.0], [86.6, 2641.0], [86.7, 2641.0], [86.8, 2641.0], [86.9, 2641.0], [87.0, 2641.0], [87.1, 2641.0], [87.2, 2641.0], [87.3, 2641.0], [87.4, 2641.0], [87.5, 2897.0], [87.6, 2897.0], [87.7, 2897.0], [87.8, 2897.0], [87.9, 2897.0], [88.0, 2897.0], [88.1, 2897.0], [88.2, 2897.0], [88.3, 2897.0], [88.4, 2897.0], [88.5, 2897.0], [88.6, 2897.0], [88.7, 2897.0], [88.8, 2897.0], [88.9, 2897.0], [89.0, 2897.0], [89.1, 2897.0], [89.2, 2897.0], [89.3, 2897.0], [89.4, 2897.0], [89.5, 2897.0], [89.6, 2897.0], [89.7, 2897.0], [89.8, 2897.0], [89.9, 2897.0], [90.0, 2947.0], [90.1, 2947.0], [90.2, 2947.0], [90.3, 2947.0], [90.4, 2947.0], [90.5, 2947.0], [90.6, 2947.0], [90.7, 2947.0], [90.8, 2947.0], [90.9, 2947.0], [91.0, 2947.0], [91.1, 2947.0], [91.2, 2947.0], [91.3, 2947.0], [91.4, 2947.0], [91.5, 2947.0], [91.6, 2947.0], [91.7, 2947.0], [91.8, 2947.0], [91.9, 2947.0], [92.0, 2947.0], [92.1, 2947.0], [92.2, 2947.0], [92.3, 2947.0], [92.4, 2947.0], [92.5, 3069.0], [92.6, 3069.0], [92.7, 3069.0], [92.8, 3069.0], [92.9, 3069.0], [93.0, 3069.0], [93.1, 3069.0], [93.2, 3069.0], [93.3, 3069.0], [93.4, 3069.0], [93.5, 3069.0], [93.6, 3069.0], [93.7, 3069.0], [93.8, 3069.0], [93.9, 3069.0], [94.0, 3069.0], [94.1, 3069.0], [94.2, 3069.0], [94.3, 3069.0], [94.4, 3069.0], [94.5, 3069.0], [94.6, 3069.0], [94.7, 3069.0], [94.8, 3069.0], [94.9, 3069.0], [95.0, 3246.0], [95.1, 3246.0], [95.2, 3246.0], [95.3, 3246.0], [95.4, 3246.0], [95.5, 3246.0], [95.6, 3246.0], [95.7, 3246.0], [95.8, 3246.0], [95.9, 3246.0], [96.0, 3246.0], [96.1, 3246.0], [96.2, 3246.0], [96.3, 3246.0], [96.4, 3246.0], [96.5, 3246.0], [96.6, 3246.0], [96.7, 3246.0], [96.8, 3246.0], [96.9, 3246.0], [97.0, 3246.0], [97.1, 3246.0], [97.2, 3246.0], [97.3, 3246.0], [97.4, 3246.0], [97.5, 3402.0], [97.6, 3402.0], [97.7, 3402.0], [97.8, 3402.0], [97.9, 3402.0], [98.0, 3402.0], [98.1, 3402.0], [98.2, 3402.0], [98.3, 3402.0], [98.4, 3402.0], [98.5, 3402.0], [98.6, 3402.0], [98.7, 3402.0], [98.8, 3402.0], [98.9, 3402.0], [99.0, 3402.0], [99.1, 3402.0], [99.2, 3402.0], [99.3, 3402.0], [99.4, 3402.0], [99.5, 3402.0], [99.6, 3402.0], [99.7, 3402.0], [99.8, 3402.0], [99.9, 3402.0]], "isOverall": false, "label": "Q4", "isController": false}, {"data": [[0.0, 290.0], [0.1, 290.0], [0.2, 290.0], [0.3, 290.0], [0.4, 290.0], [0.5, 290.0], [0.6, 290.0], [0.7, 290.0], [0.8, 290.0], [0.9, 290.0], [1.0, 290.0], [1.1, 290.0], [1.2, 290.0], [1.3, 290.0], [1.4, 290.0], [1.5, 290.0], [1.6, 290.0], [1.7, 290.0], [1.8, 290.0], [1.9, 290.0], [2.0, 290.0], [2.1, 290.0], [2.2, 290.0], [2.3, 290.0], [2.4, 290.0], [2.5, 451.0], [2.6, 451.0], [2.7, 451.0], [2.8, 451.0], [2.9, 451.0], [3.0, 451.0], [3.1, 451.0], [3.2, 451.0], [3.3, 451.0], [3.4, 451.0], [3.5, 451.0], [3.6, 451.0], [3.7, 451.0], [3.8, 451.0], [3.9, 451.0], [4.0, 451.0], [4.1, 451.0], [4.2, 451.0], [4.3, 451.0], [4.4, 451.0], [4.5, 451.0], [4.6, 451.0], [4.7, 451.0], [4.8, 451.0], [4.9, 451.0], [5.0, 468.0], [5.1, 468.0], [5.2, 468.0], [5.3, 468.0], [5.4, 468.0], [5.5, 468.0], [5.6, 468.0], [5.7, 468.0], [5.8, 468.0], [5.9, 468.0], [6.0, 468.0], [6.1, 468.0], [6.2, 468.0], [6.3, 468.0], [6.4, 468.0], [6.5, 468.0], [6.6, 468.0], [6.7, 468.0], [6.8, 468.0], [6.9, 468.0], [7.0, 468.0], [7.1, 468.0], [7.2, 468.0], [7.3, 468.0], [7.4, 468.0], [7.5, 925.0], [7.6, 925.0], [7.7, 925.0], [7.8, 925.0], [7.9, 925.0], [8.0, 925.0], [8.1, 925.0], [8.2, 925.0], [8.3, 925.0], [8.4, 925.0], [8.5, 925.0], [8.6, 925.0], [8.7, 925.0], [8.8, 925.0], [8.9, 925.0], [9.0, 925.0], [9.1, 925.0], [9.2, 925.0], [9.3, 925.0], [9.4, 925.0], [9.5, 925.0], [9.6, 925.0], [9.7, 925.0], [9.8, 925.0], [9.9, 925.0], [10.0, 969.0], [10.1, 969.0], [10.2, 969.0], [10.3, 969.0], [10.4, 969.0], [10.5, 969.0], [10.6, 969.0], [10.7, 969.0], [10.8, 969.0], [10.9, 969.0], [11.0, 969.0], [11.1, 969.0], [11.2, 969.0], [11.3, 969.0], [11.4, 969.0], [11.5, 969.0], [11.6, 969.0], [11.7, 969.0], [11.8, 969.0], [11.9, 969.0], [12.0, 969.0], [12.1, 969.0], [12.2, 969.0], [12.3, 969.0], [12.4, 969.0], [12.5, 1005.0], [12.6, 1005.0], [12.7, 1005.0], [12.8, 1005.0], [12.9, 1005.0], [13.0, 1005.0], [13.1, 1005.0], [13.2, 1005.0], [13.3, 1005.0], [13.4, 1005.0], [13.5, 1005.0], [13.6, 1005.0], [13.7, 1005.0], [13.8, 1005.0], [13.9, 1005.0], [14.0, 1005.0], [14.1, 1005.0], [14.2, 1005.0], [14.3, 1005.0], [14.4, 1005.0], [14.5, 1005.0], [14.6, 1005.0], [14.7, 1005.0], [14.8, 1005.0], [14.9, 1005.0], [15.0, 1243.0], [15.1, 1243.0], [15.2, 1243.0], [15.3, 1243.0], [15.4, 1243.0], [15.5, 1243.0], [15.6, 1243.0], [15.7, 1243.0], [15.8, 1243.0], [15.9, 1243.0], [16.0, 1243.0], [16.1, 1243.0], [16.2, 1243.0], [16.3, 1243.0], [16.4, 1243.0], [16.5, 1243.0], [16.6, 1243.0], [16.7, 1243.0], [16.8, 1243.0], [16.9, 1243.0], [17.0, 1243.0], [17.1, 1243.0], [17.2, 1243.0], [17.3, 1243.0], [17.4, 1243.0], [17.5, 1284.0], [17.6, 1284.0], [17.7, 1284.0], [17.8, 1284.0], [17.9, 1284.0], [18.0, 1284.0], [18.1, 1284.0], [18.2, 1284.0], [18.3, 1284.0], [18.4, 1284.0], [18.5, 1284.0], [18.6, 1284.0], [18.7, 1284.0], [18.8, 1284.0], [18.9, 1284.0], [19.0, 1284.0], [19.1, 1284.0], [19.2, 1284.0], [19.3, 1284.0], [19.4, 1284.0], [19.5, 1284.0], [19.6, 1284.0], [19.7, 1284.0], [19.8, 1284.0], [19.9, 1284.0], [20.0, 1315.0], [20.1, 1315.0], [20.2, 1315.0], [20.3, 1315.0], [20.4, 1315.0], [20.5, 1315.0], [20.6, 1315.0], [20.7, 1315.0], [20.8, 1315.0], [20.9, 1315.0], [21.0, 1315.0], [21.1, 1315.0], [21.2, 1315.0], [21.3, 1315.0], [21.4, 1315.0], [21.5, 1315.0], [21.6, 1315.0], [21.7, 1315.0], [21.8, 1315.0], [21.9, 1315.0], [22.0, 1315.0], [22.1, 1315.0], [22.2, 1315.0], [22.3, 1315.0], [22.4, 1315.0], [22.5, 1443.0], [22.6, 1443.0], [22.7, 1443.0], [22.8, 1443.0], [22.9, 1443.0], [23.0, 1443.0], [23.1, 1443.0], [23.2, 1443.0], [23.3, 1443.0], [23.4, 1443.0], [23.5, 1443.0], [23.6, 1443.0], [23.7, 1443.0], [23.8, 1443.0], [23.9, 1443.0], [24.0, 1443.0], [24.1, 1443.0], [24.2, 1443.0], [24.3, 1443.0], [24.4, 1443.0], [24.5, 1443.0], [24.6, 1443.0], [24.7, 1443.0], [24.8, 1443.0], [24.9, 1443.0], [25.0, 1521.0], [25.1, 1521.0], [25.2, 1521.0], [25.3, 1521.0], [25.4, 1521.0], [25.5, 1521.0], [25.6, 1521.0], [25.7, 1521.0], [25.8, 1521.0], [25.9, 1521.0], [26.0, 1521.0], [26.1, 1521.0], [26.2, 1521.0], [26.3, 1521.0], [26.4, 1521.0], [26.5, 1521.0], [26.6, 1521.0], [26.7, 1521.0], [26.8, 1521.0], [26.9, 1521.0], [27.0, 1521.0], [27.1, 1521.0], [27.2, 1521.0], [27.3, 1521.0], [27.4, 1521.0], [27.5, 1654.0], [27.6, 1654.0], [27.7, 1654.0], [27.8, 1654.0], [27.9, 1654.0], [28.0, 1654.0], [28.1, 1654.0], [28.2, 1654.0], [28.3, 1654.0], [28.4, 1654.0], [28.5, 1654.0], [28.6, 1654.0], [28.7, 1654.0], [28.8, 1654.0], [28.9, 1654.0], [29.0, 1654.0], [29.1, 1654.0], [29.2, 1654.0], [29.3, 1654.0], [29.4, 1654.0], [29.5, 1654.0], [29.6, 1654.0], [29.7, 1654.0], [29.8, 1654.0], [29.9, 1654.0], [30.0, 1807.0], [30.1, 1807.0], [30.2, 1807.0], [30.3, 1807.0], [30.4, 1807.0], [30.5, 1807.0], [30.6, 1807.0], [30.7, 1807.0], [30.8, 1807.0], [30.9, 1807.0], [31.0, 1807.0], [31.1, 1807.0], [31.2, 1807.0], [31.3, 1807.0], [31.4, 1807.0], [31.5, 1807.0], [31.6, 1807.0], [31.7, 1807.0], [31.8, 1807.0], [31.9, 1807.0], [32.0, 1807.0], [32.1, 1807.0], [32.2, 1807.0], [32.3, 1807.0], [32.4, 1807.0], [32.5, 1851.0], [32.6, 1851.0], [32.7, 1851.0], [32.8, 1851.0], [32.9, 1851.0], [33.0, 1851.0], [33.1, 1851.0], [33.2, 1851.0], [33.3, 1851.0], [33.4, 1851.0], [33.5, 1851.0], [33.6, 1851.0], [33.7, 1851.0], [33.8, 1851.0], [33.9, 1851.0], [34.0, 1851.0], [34.1, 1851.0], [34.2, 1851.0], [34.3, 1851.0], [34.4, 1851.0], [34.5, 1851.0], [34.6, 1851.0], [34.7, 1851.0], [34.8, 1851.0], [34.9, 1851.0], [35.0, 1960.0], [35.1, 1960.0], [35.2, 1960.0], [35.3, 1960.0], [35.4, 1960.0], [35.5, 1960.0], [35.6, 1960.0], [35.7, 1960.0], [35.8, 1960.0], [35.9, 1960.0], [36.0, 1960.0], [36.1, 1960.0], [36.2, 1960.0], [36.3, 1960.0], [36.4, 1960.0], [36.5, 1960.0], [36.6, 1960.0], [36.7, 1960.0], [36.8, 1960.0], [36.9, 1960.0], [37.0, 1960.0], [37.1, 1960.0], [37.2, 1960.0], [37.3, 1960.0], [37.4, 1960.0], [37.5, 1973.0], [37.6, 1973.0], [37.7, 1973.0], [37.8, 1973.0], [37.9, 1973.0], [38.0, 1973.0], [38.1, 1973.0], [38.2, 1973.0], [38.3, 1973.0], [38.4, 1973.0], [38.5, 1973.0], [38.6, 1973.0], [38.7, 1973.0], [38.8, 1973.0], [38.9, 1973.0], [39.0, 1973.0], [39.1, 1973.0], [39.2, 1973.0], [39.3, 1973.0], [39.4, 1973.0], [39.5, 1973.0], [39.6, 1973.0], [39.7, 1973.0], [39.8, 1973.0], [39.9, 1973.0], [40.0, 1975.0], [40.1, 1975.0], [40.2, 1975.0], [40.3, 1975.0], [40.4, 1975.0], [40.5, 1975.0], [40.6, 1975.0], [40.7, 1975.0], [40.8, 1975.0], [40.9, 1975.0], [41.0, 1975.0], [41.1, 1975.0], [41.2, 1975.0], [41.3, 1975.0], [41.4, 1975.0], [41.5, 1975.0], [41.6, 1975.0], [41.7, 1975.0], [41.8, 1975.0], [41.9, 1975.0], [42.0, 1975.0], [42.1, 1975.0], [42.2, 1975.0], [42.3, 1975.0], [42.4, 1975.0], [42.5, 2047.0], [42.6, 2047.0], [42.7, 2047.0], [42.8, 2047.0], [42.9, 2047.0], [43.0, 2047.0], [43.1, 2047.0], [43.2, 2047.0], [43.3, 2047.0], [43.4, 2047.0], [43.5, 2047.0], [43.6, 2047.0], [43.7, 2047.0], [43.8, 2047.0], [43.9, 2047.0], [44.0, 2047.0], [44.1, 2047.0], [44.2, 2047.0], [44.3, 2047.0], [44.4, 2047.0], [44.5, 2047.0], [44.6, 2047.0], [44.7, 2047.0], [44.8, 2047.0], [44.9, 2047.0], [45.0, 2085.0], [45.1, 2085.0], [45.2, 2085.0], [45.3, 2085.0], [45.4, 2085.0], [45.5, 2085.0], [45.6, 2085.0], [45.7, 2085.0], [45.8, 2085.0], [45.9, 2085.0], [46.0, 2085.0], [46.1, 2085.0], [46.2, 2085.0], [46.3, 2085.0], [46.4, 2085.0], [46.5, 2085.0], [46.6, 2085.0], [46.7, 2085.0], [46.8, 2085.0], [46.9, 2085.0], [47.0, 2085.0], [47.1, 2085.0], [47.2, 2085.0], [47.3, 2085.0], [47.4, 2085.0], [47.5, 2093.0], [47.6, 2093.0], [47.7, 2093.0], [47.8, 2093.0], [47.9, 2093.0], [48.0, 2093.0], [48.1, 2093.0], [48.2, 2093.0], [48.3, 2093.0], [48.4, 2093.0], [48.5, 2093.0], [48.6, 2093.0], [48.7, 2093.0], [48.8, 2093.0], [48.9, 2093.0], [49.0, 2093.0], [49.1, 2093.0], [49.2, 2093.0], [49.3, 2093.0], [49.4, 2093.0], [49.5, 2093.0], [49.6, 2093.0], [49.7, 2093.0], [49.8, 2093.0], [49.9, 2093.0], [50.0, 2147.0], [50.1, 2147.0], [50.2, 2147.0], [50.3, 2147.0], [50.4, 2147.0], [50.5, 2147.0], [50.6, 2147.0], [50.7, 2147.0], [50.8, 2147.0], [50.9, 2147.0], [51.0, 2147.0], [51.1, 2147.0], [51.2, 2147.0], [51.3, 2147.0], [51.4, 2147.0], [51.5, 2147.0], [51.6, 2147.0], [51.7, 2147.0], [51.8, 2147.0], [51.9, 2147.0], [52.0, 2147.0], [52.1, 2147.0], [52.2, 2147.0], [52.3, 2147.0], [52.4, 2147.0], [52.5, 2191.0], [52.6, 2191.0], [52.7, 2191.0], [52.8, 2191.0], [52.9, 2191.0], [53.0, 2191.0], [53.1, 2191.0], [53.2, 2191.0], [53.3, 2191.0], [53.4, 2191.0], [53.5, 2191.0], [53.6, 2191.0], [53.7, 2191.0], [53.8, 2191.0], [53.9, 2191.0], [54.0, 2191.0], [54.1, 2191.0], [54.2, 2191.0], [54.3, 2191.0], [54.4, 2191.0], [54.5, 2191.0], [54.6, 2191.0], [54.7, 2191.0], [54.8, 2191.0], [54.9, 2191.0], [55.0, 2262.0], [55.1, 2262.0], [55.2, 2262.0], [55.3, 2262.0], [55.4, 2262.0], [55.5, 2262.0], [55.6, 2262.0], [55.7, 2262.0], [55.8, 2262.0], [55.9, 2262.0], [56.0, 2262.0], [56.1, 2262.0], [56.2, 2262.0], [56.3, 2262.0], [56.4, 2262.0], [56.5, 2262.0], [56.6, 2262.0], [56.7, 2262.0], [56.8, 2262.0], [56.9, 2262.0], [57.0, 2262.0], [57.1, 2262.0], [57.2, 2262.0], [57.3, 2262.0], [57.4, 2262.0], [57.5, 2381.0], [57.6, 2381.0], [57.7, 2381.0], [57.8, 2381.0], [57.9, 2381.0], [58.0, 2381.0], [58.1, 2381.0], [58.2, 2381.0], [58.3, 2381.0], [58.4, 2381.0], [58.5, 2381.0], [58.6, 2381.0], [58.7, 2381.0], [58.8, 2381.0], [58.9, 2381.0], [59.0, 2381.0], [59.1, 2381.0], [59.2, 2381.0], [59.3, 2381.0], [59.4, 2381.0], [59.5, 2381.0], [59.6, 2381.0], [59.7, 2381.0], [59.8, 2381.0], [59.9, 2381.0], [60.0, 2396.0], [60.1, 2396.0], [60.2, 2396.0], [60.3, 2396.0], [60.4, 2396.0], [60.5, 2396.0], [60.6, 2396.0], [60.7, 2396.0], [60.8, 2396.0], [60.9, 2396.0], [61.0, 2396.0], [61.1, 2396.0], [61.2, 2396.0], [61.3, 2396.0], [61.4, 2396.0], [61.5, 2396.0], [61.6, 2396.0], [61.7, 2396.0], [61.8, 2396.0], [61.9, 2396.0], [62.0, 2396.0], [62.1, 2396.0], [62.2, 2396.0], [62.3, 2396.0], [62.4, 2396.0], [62.5, 2436.0], [62.6, 2436.0], [62.7, 2436.0], [62.8, 2436.0], [62.9, 2436.0], [63.0, 2436.0], [63.1, 2436.0], [63.2, 2436.0], [63.3, 2436.0], [63.4, 2436.0], [63.5, 2436.0], [63.6, 2436.0], [63.7, 2436.0], [63.8, 2436.0], [63.9, 2436.0], [64.0, 2436.0], [64.1, 2436.0], [64.2, 2436.0], [64.3, 2436.0], [64.4, 2436.0], [64.5, 2436.0], [64.6, 2436.0], [64.7, 2436.0], [64.8, 2436.0], [64.9, 2436.0], [65.0, 2452.0], [65.1, 2452.0], [65.2, 2452.0], [65.3, 2452.0], [65.4, 2452.0], [65.5, 2452.0], [65.6, 2452.0], [65.7, 2452.0], [65.8, 2452.0], [65.9, 2452.0], [66.0, 2452.0], [66.1, 2452.0], [66.2, 2452.0], [66.3, 2452.0], [66.4, 2452.0], [66.5, 2452.0], [66.6, 2452.0], [66.7, 2452.0], [66.8, 2452.0], [66.9, 2452.0], [67.0, 2452.0], [67.1, 2452.0], [67.2, 2452.0], [67.3, 2452.0], [67.4, 2452.0], [67.5, 2464.0], [67.6, 2464.0], [67.7, 2464.0], [67.8, 2464.0], [67.9, 2464.0], [68.0, 2464.0], [68.1, 2464.0], [68.2, 2464.0], [68.3, 2464.0], [68.4, 2464.0], [68.5, 2464.0], [68.6, 2464.0], [68.7, 2464.0], [68.8, 2464.0], [68.9, 2464.0], [69.0, 2464.0], [69.1, 2464.0], [69.2, 2464.0], [69.3, 2464.0], [69.4, 2464.0], [69.5, 2464.0], [69.6, 2464.0], [69.7, 2464.0], [69.8, 2464.0], [69.9, 2464.0], [70.0, 2494.0], [70.1, 2494.0], [70.2, 2494.0], [70.3, 2494.0], [70.4, 2494.0], [70.5, 2494.0], [70.6, 2494.0], [70.7, 2494.0], [70.8, 2494.0], [70.9, 2494.0], [71.0, 2494.0], [71.1, 2494.0], [71.2, 2494.0], [71.3, 2494.0], [71.4, 2494.0], [71.5, 2494.0], [71.6, 2494.0], [71.7, 2494.0], [71.8, 2494.0], [71.9, 2494.0], [72.0, 2494.0], [72.1, 2494.0], [72.2, 2494.0], [72.3, 2494.0], [72.4, 2494.0], [72.5, 2612.0], [72.6, 2612.0], [72.7, 2612.0], [72.8, 2612.0], [72.9, 2612.0], [73.0, 2612.0], [73.1, 2612.0], [73.2, 2612.0], [73.3, 2612.0], [73.4, 2612.0], [73.5, 2612.0], [73.6, 2612.0], [73.7, 2612.0], [73.8, 2612.0], [73.9, 2612.0], [74.0, 2612.0], [74.1, 2612.0], [74.2, 2612.0], [74.3, 2612.0], [74.4, 2612.0], [74.5, 2612.0], [74.6, 2612.0], [74.7, 2612.0], [74.8, 2612.0], [74.9, 2612.0], [75.0, 2682.0], [75.1, 2682.0], [75.2, 2682.0], [75.3, 2682.0], [75.4, 2682.0], [75.5, 2682.0], [75.6, 2682.0], [75.7, 2682.0], [75.8, 2682.0], [75.9, 2682.0], [76.0, 2682.0], [76.1, 2682.0], [76.2, 2682.0], [76.3, 2682.0], [76.4, 2682.0], [76.5, 2682.0], [76.6, 2682.0], [76.7, 2682.0], [76.8, 2682.0], [76.9, 2682.0], [77.0, 2682.0], [77.1, 2682.0], [77.2, 2682.0], [77.3, 2682.0], [77.4, 2682.0], [77.5, 2694.0], [77.6, 2694.0], [77.7, 2694.0], [77.8, 2694.0], [77.9, 2694.0], [78.0, 2694.0], [78.1, 2694.0], [78.2, 2694.0], [78.3, 2694.0], [78.4, 2694.0], [78.5, 2694.0], [78.6, 2694.0], [78.7, 2694.0], [78.8, 2694.0], [78.9, 2694.0], [79.0, 2694.0], [79.1, 2694.0], [79.2, 2694.0], [79.3, 2694.0], [79.4, 2694.0], [79.5, 2694.0], [79.6, 2694.0], [79.7, 2694.0], [79.8, 2694.0], [79.9, 2694.0], [80.0, 2740.0], [80.1, 2740.0], [80.2, 2740.0], [80.3, 2740.0], [80.4, 2740.0], [80.5, 2740.0], [80.6, 2740.0], [80.7, 2740.0], [80.8, 2740.0], [80.9, 2740.0], [81.0, 2740.0], [81.1, 2740.0], [81.2, 2740.0], [81.3, 2740.0], [81.4, 2740.0], [81.5, 2740.0], [81.6, 2740.0], [81.7, 2740.0], [81.8, 2740.0], [81.9, 2740.0], [82.0, 2740.0], [82.1, 2740.0], [82.2, 2740.0], [82.3, 2740.0], [82.4, 2740.0], [82.5, 2801.0], [82.6, 2801.0], [82.7, 2801.0], [82.8, 2801.0], [82.9, 2801.0], [83.0, 2801.0], [83.1, 2801.0], [83.2, 2801.0], [83.3, 2801.0], [83.4, 2801.0], [83.5, 2801.0], [83.6, 2801.0], [83.7, 2801.0], [83.8, 2801.0], [83.9, 2801.0], [84.0, 2801.0], [84.1, 2801.0], [84.2, 2801.0], [84.3, 2801.0], [84.4, 2801.0], [84.5, 2801.0], [84.6, 2801.0], [84.7, 2801.0], [84.8, 2801.0], [84.9, 2801.0], [85.0, 2818.0], [85.1, 2818.0], [85.2, 2818.0], [85.3, 2818.0], [85.4, 2818.0], [85.5, 2818.0], [85.6, 2818.0], [85.7, 2818.0], [85.8, 2818.0], [85.9, 2818.0], [86.0, 2818.0], [86.1, 2818.0], [86.2, 2818.0], [86.3, 2818.0], [86.4, 2818.0], [86.5, 2818.0], [86.6, 2818.0], [86.7, 2818.0], [86.8, 2818.0], [86.9, 2818.0], [87.0, 2818.0], [87.1, 2818.0], [87.2, 2818.0], [87.3, 2818.0], [87.4, 2818.0], [87.5, 2954.0], [87.6, 2954.0], [87.7, 2954.0], [87.8, 2954.0], [87.9, 2954.0], [88.0, 2954.0], [88.1, 2954.0], [88.2, 2954.0], [88.3, 2954.0], [88.4, 2954.0], [88.5, 2954.0], [88.6, 2954.0], [88.7, 2954.0], [88.8, 2954.0], [88.9, 2954.0], [89.0, 2954.0], [89.1, 2954.0], [89.2, 2954.0], [89.3, 2954.0], [89.4, 2954.0], [89.5, 2954.0], [89.6, 2954.0], [89.7, 2954.0], [89.8, 2954.0], [89.9, 2954.0], [90.0, 2955.0], [90.1, 2955.0], [90.2, 2955.0], [90.3, 2955.0], [90.4, 2955.0], [90.5, 2955.0], [90.6, 2955.0], [90.7, 2955.0], [90.8, 2955.0], [90.9, 2955.0], [91.0, 2955.0], [91.1, 2955.0], [91.2, 2955.0], [91.3, 2955.0], [91.4, 2955.0], [91.5, 2955.0], [91.6, 2955.0], [91.7, 2955.0], [91.8, 2955.0], [91.9, 2955.0], [92.0, 2955.0], [92.1, 2955.0], [92.2, 2955.0], [92.3, 2955.0], [92.4, 2955.0], [92.5, 3108.0], [92.6, 3108.0], [92.7, 3108.0], [92.8, 3108.0], [92.9, 3108.0], [93.0, 3108.0], [93.1, 3108.0], [93.2, 3108.0], [93.3, 3108.0], [93.4, 3108.0], [93.5, 3108.0], [93.6, 3108.0], [93.7, 3108.0], [93.8, 3108.0], [93.9, 3108.0], [94.0, 3108.0], [94.1, 3108.0], [94.2, 3108.0], [94.3, 3108.0], [94.4, 3108.0], [94.5, 3108.0], [94.6, 3108.0], [94.7, 3108.0], [94.8, 3108.0], [94.9, 3108.0], [95.0, 3133.0], [95.1, 3133.0], [95.2, 3133.0], [95.3, 3133.0], [95.4, 3133.0], [95.5, 3133.0], [95.6, 3133.0], [95.7, 3133.0], [95.8, 3133.0], [95.9, 3133.0], [96.0, 3133.0], [96.1, 3133.0], [96.2, 3133.0], [96.3, 3133.0], [96.4, 3133.0], [96.5, 3133.0], [96.6, 3133.0], [96.7, 3133.0], [96.8, 3133.0], [96.9, 3133.0], [97.0, 3133.0], [97.1, 3133.0], [97.2, 3133.0], [97.3, 3133.0], [97.4, 3133.0], [97.5, 4017.0], [97.6, 4017.0], [97.7, 4017.0], [97.8, 4017.0], [97.9, 4017.0], [98.0, 4017.0], [98.1, 4017.0], [98.2, 4017.0], [98.3, 4017.0], [98.4, 4017.0], [98.5, 4017.0], [98.6, 4017.0], [98.7, 4017.0], [98.8, 4017.0], [98.9, 4017.0], [99.0, 4017.0], [99.1, 4017.0], [99.2, 4017.0], [99.3, 4017.0], [99.4, 4017.0], [99.5, 4017.0], [99.6, 4017.0], [99.7, 4017.0], [99.8, 4017.0], [99.9, 4017.0]], "isOverall": false, "label": "Q5", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 28.0], [0.4, 28.0], [0.5, 28.0], [0.6, 28.0], [0.7, 28.0], [0.8, 28.0], [0.9, 28.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 31.0], [1.4, 31.0], [1.5, 31.0], [1.6, 31.0], [1.7, 31.0], [1.8, 31.0], [1.9, 31.0], [2.0, 31.0], [2.1, 31.0], [2.2, 31.0], [2.3, 31.0], [2.4, 31.0], [2.5, 31.0], [2.6, 31.0], [2.7, 31.0], [2.8, 31.0], [2.9, 31.0], [3.0, 31.0], [3.1, 31.0], [3.2, 31.0], [3.3, 31.0], [3.4, 31.0], [3.5, 31.0], [3.6, 31.0], [3.7, 31.0], [3.8, 35.0], [3.9, 35.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 35.0], [4.8, 35.0], [4.9, 35.0], [5.0, 35.0], [5.1, 35.0], [5.2, 35.0], [5.3, 35.0], [5.4, 35.0], [5.5, 35.0], [5.6, 35.0], [5.7, 35.0], [5.8, 35.0], [5.9, 35.0], [6.0, 35.0], [6.1, 35.0], [6.2, 35.0], [6.3, 35.0], [6.4, 35.0], [6.5, 35.0], [6.6, 35.0], [6.7, 35.0], [6.8, 35.0], [6.9, 35.0], [7.0, 35.0], [7.1, 35.0], [7.2, 35.0], [7.3, 35.0], [7.4, 35.0], [7.5, 35.0], [7.6, 35.0], [7.7, 35.0], [7.8, 35.0], [7.9, 35.0], [8.0, 35.0], [8.1, 35.0], [8.2, 35.0], [8.3, 35.0], [8.4, 35.0], [8.5, 35.0], [8.6, 35.0], [8.7, 35.0], [8.8, 36.0], [8.9, 36.0], [9.0, 36.0], [9.1, 36.0], [9.2, 36.0], [9.3, 36.0], [9.4, 36.0], [9.5, 36.0], [9.6, 36.0], [9.7, 36.0], [9.8, 36.0], [9.9, 36.0], [10.0, 38.0], [10.1, 38.0], [10.2, 38.0], [10.3, 38.0], [10.4, 38.0], [10.5, 38.0], [10.6, 38.0], [10.7, 38.0], [10.8, 38.0], [10.9, 38.0], [11.0, 38.0], [11.1, 38.0], [11.2, 38.0], [11.3, 38.0], [11.4, 38.0], [11.5, 38.0], [11.6, 38.0], [11.7, 38.0], [11.8, 38.0], [11.9, 38.0], [12.0, 38.0], [12.1, 38.0], [12.2, 38.0], [12.3, 38.0], [12.4, 38.0], [12.5, 40.0], [12.6, 40.0], [12.7, 40.0], [12.8, 40.0], [12.9, 40.0], [13.0, 40.0], [13.1, 40.0], [13.2, 40.0], [13.3, 40.0], [13.4, 40.0], [13.5, 40.0], [13.6, 40.0], [13.7, 40.0], [13.8, 40.0], [13.9, 40.0], [14.0, 40.0], [14.1, 40.0], [14.2, 40.0], [14.3, 40.0], [14.4, 40.0], [14.5, 40.0], [14.6, 40.0], [14.7, 40.0], [14.8, 40.0], [14.9, 40.0], [15.0, 41.0], [15.1, 41.0], [15.2, 41.0], [15.3, 41.0], [15.4, 41.0], [15.5, 41.0], [15.6, 41.0], [15.7, 41.0], [15.8, 41.0], [15.9, 41.0], [16.0, 41.0], [16.1, 41.0], [16.2, 41.0], [16.3, 42.0], [16.4, 42.0], [16.5, 42.0], [16.6, 42.0], [16.7, 42.0], [16.8, 42.0], [16.9, 42.0], [17.0, 42.0], [17.1, 42.0], [17.2, 42.0], [17.3, 42.0], [17.4, 42.0], [17.5, 42.0], [17.6, 42.0], [17.7, 42.0], [17.8, 42.0], [17.9, 42.0], [18.0, 42.0], [18.1, 42.0], [18.2, 42.0], [18.3, 42.0], [18.4, 42.0], [18.5, 42.0], [18.6, 42.0], [18.7, 42.0], [18.8, 44.0], [18.9, 44.0], [19.0, 44.0], [19.1, 44.0], [19.2, 44.0], [19.3, 44.0], [19.4, 44.0], [19.5, 44.0], [19.6, 44.0], [19.7, 44.0], [19.8, 44.0], [19.9, 44.0], [20.0, 44.0], [20.1, 44.0], [20.2, 44.0], [20.3, 44.0], [20.4, 44.0], [20.5, 44.0], [20.6, 44.0], [20.7, 44.0], [20.8, 44.0], [20.9, 44.0], [21.0, 44.0], [21.1, 44.0], [21.2, 44.0], [21.3, 44.0], [21.4, 44.0], [21.5, 44.0], [21.6, 44.0], [21.7, 44.0], [21.8, 44.0], [21.9, 44.0], [22.0, 44.0], [22.1, 44.0], [22.2, 44.0], [22.3, 44.0], [22.4, 44.0], [22.5, 44.0], [22.6, 44.0], [22.7, 44.0], [22.8, 44.0], [22.9, 44.0], [23.0, 44.0], [23.1, 44.0], [23.2, 44.0], [23.3, 44.0], [23.4, 44.0], [23.5, 44.0], [23.6, 44.0], [23.7, 44.0], [23.8, 45.0], [23.9, 45.0], [24.0, 45.0], [24.1, 45.0], [24.2, 45.0], [24.3, 45.0], [24.4, 45.0], [24.5, 45.0], [24.6, 45.0], [24.7, 45.0], [24.8, 45.0], [24.9, 45.0], [25.0, 46.0], [25.1, 46.0], [25.2, 46.0], [25.3, 46.0], [25.4, 46.0], [25.5, 46.0], [25.6, 46.0], [25.7, 46.0], [25.8, 46.0], [25.9, 46.0], [26.0, 46.0], [26.1, 46.0], [26.2, 46.0], [26.3, 48.0], [26.4, 48.0], [26.5, 48.0], [26.6, 48.0], [26.7, 48.0], [26.8, 48.0], [26.9, 48.0], [27.0, 48.0], [27.1, 48.0], [27.2, 48.0], [27.3, 48.0], [27.4, 48.0], [27.5, 48.0], [27.6, 48.0], [27.7, 48.0], [27.8, 48.0], [27.9, 48.0], [28.0, 48.0], [28.1, 48.0], [28.2, 48.0], [28.3, 48.0], [28.4, 48.0], [28.5, 48.0], [28.6, 48.0], [28.7, 48.0], [28.8, 48.0], [28.9, 48.0], [29.0, 48.0], [29.1, 48.0], [29.2, 48.0], [29.3, 48.0], [29.4, 48.0], [29.5, 48.0], [29.6, 48.0], [29.7, 48.0], [29.8, 48.0], [29.9, 48.0], [30.0, 49.0], [30.1, 49.0], [30.2, 49.0], [30.3, 49.0], [30.4, 49.0], [30.5, 49.0], [30.6, 49.0], [30.7, 49.0], [30.8, 49.0], [30.9, 49.0], [31.0, 49.0], [31.1, 49.0], [31.2, 49.0], [31.3, 49.0], [31.4, 49.0], [31.5, 49.0], [31.6, 49.0], [31.7, 49.0], [31.8, 49.0], [31.9, 49.0], [32.0, 49.0], [32.1, 49.0], [32.2, 49.0], [32.3, 49.0], [32.4, 49.0], [32.5, 53.0], [32.6, 53.0], [32.7, 53.0], [32.8, 53.0], [32.9, 53.0], [33.0, 53.0], [33.1, 53.0], [33.2, 53.0], [33.3, 53.0], [33.4, 53.0], [33.5, 53.0], [33.6, 53.0], [33.7, 53.0], [33.8, 53.0], [33.9, 53.0], [34.0, 53.0], [34.1, 53.0], [34.2, 53.0], [34.3, 53.0], [34.4, 53.0], [34.5, 53.0], [34.6, 53.0], [34.7, 53.0], [34.8, 53.0], [34.9, 53.0], [35.0, 54.0], [35.1, 54.0], [35.2, 54.0], [35.3, 54.0], [35.4, 54.0], [35.5, 54.0], [35.6, 54.0], [35.7, 54.0], [35.8, 54.0], [35.9, 54.0], [36.0, 54.0], [36.1, 54.0], [36.2, 54.0], [36.3, 55.0], [36.4, 55.0], [36.5, 55.0], [36.6, 55.0], [36.7, 55.0], [36.8, 55.0], [36.9, 55.0], [37.0, 55.0], [37.1, 55.0], [37.2, 55.0], [37.3, 55.0], [37.4, 55.0], [37.5, 59.0], [37.6, 59.0], [37.7, 59.0], [37.8, 59.0], [37.9, 59.0], [38.0, 59.0], [38.1, 59.0], [38.2, 59.0], [38.3, 59.0], [38.4, 59.0], [38.5, 59.0], [38.6, 59.0], [38.7, 59.0], [38.8, 59.0], [38.9, 59.0], [39.0, 59.0], [39.1, 59.0], [39.2, 59.0], [39.3, 59.0], [39.4, 59.0], [39.5, 59.0], [39.6, 59.0], [39.7, 59.0], [39.8, 59.0], [39.9, 59.0], [40.0, 64.0], [40.1, 64.0], [40.2, 64.0], [40.3, 64.0], [40.4, 64.0], [40.5, 64.0], [40.6, 64.0], [40.7, 64.0], [40.8, 64.0], [40.9, 64.0], [41.0, 64.0], [41.1, 64.0], [41.2, 64.0], [41.3, 67.0], [41.4, 67.0], [41.5, 67.0], [41.6, 67.0], [41.7, 67.0], [41.8, 67.0], [41.9, 67.0], [42.0, 67.0], [42.1, 67.0], [42.2, 67.0], [42.3, 67.0], [42.4, 67.0], [42.5, 70.0], [42.6, 70.0], [42.7, 70.0], [42.8, 70.0], [42.9, 70.0], [43.0, 70.0], [43.1, 70.0], [43.2, 70.0], [43.3, 70.0], [43.4, 70.0], [43.5, 70.0], [43.6, 70.0], [43.7, 70.0], [43.8, 76.0], [43.9, 76.0], [44.0, 76.0], [44.1, 76.0], [44.2, 76.0], [44.3, 76.0], [44.4, 76.0], [44.5, 76.0], [44.6, 76.0], [44.7, 76.0], [44.8, 76.0], [44.9, 76.0], [45.0, 98.0], [45.1, 98.0], [45.2, 98.0], [45.3, 98.0], [45.4, 98.0], [45.5, 98.0], [45.6, 98.0], [45.7, 98.0], [45.8, 98.0], [45.9, 98.0], [46.0, 98.0], [46.1, 98.0], [46.2, 98.0], [46.3, 108.0], [46.4, 108.0], [46.5, 108.0], [46.6, 108.0], [46.7, 108.0], [46.8, 108.0], [46.9, 108.0], [47.0, 108.0], [47.1, 108.0], [47.2, 108.0], [47.3, 108.0], [47.4, 108.0], [47.5, 118.0], [47.6, 118.0], [47.7, 118.0], [47.8, 118.0], [47.9, 118.0], [48.0, 118.0], [48.1, 118.0], [48.2, 118.0], [48.3, 118.0], [48.4, 118.0], [48.5, 118.0], [48.6, 118.0], [48.7, 118.0], [48.8, 134.0], [48.9, 134.0], [49.0, 134.0], [49.1, 134.0], [49.2, 134.0], [49.3, 134.0], [49.4, 134.0], [49.5, 134.0], [49.6, 134.0], [49.7, 134.0], [49.8, 134.0], [49.9, 134.0], [50.0, 144.0], [50.1, 144.0], [50.2, 144.0], [50.3, 144.0], [50.4, 144.0], [50.5, 144.0], [50.6, 144.0], [50.7, 144.0], [50.8, 144.0], [50.9, 144.0], [51.0, 144.0], [51.1, 144.0], [51.2, 144.0], [51.3, 145.0], [51.4, 145.0], [51.5, 145.0], [51.6, 145.0], [51.7, 145.0], [51.8, 145.0], [51.9, 145.0], [52.0, 145.0], [52.1, 145.0], [52.2, 145.0], [52.3, 145.0], [52.4, 145.0], [52.5, 157.0], [52.6, 157.0], [52.7, 157.0], [52.8, 157.0], [52.9, 157.0], [53.0, 157.0], [53.1, 157.0], [53.2, 157.0], [53.3, 157.0], [53.4, 157.0], [53.5, 157.0], [53.6, 157.0], [53.7, 157.0], [53.8, 180.0], [53.9, 180.0], [54.0, 180.0], [54.1, 180.0], [54.2, 180.0], [54.3, 180.0], [54.4, 180.0], [54.5, 180.0], [54.6, 180.0], [54.7, 180.0], [54.8, 180.0], [54.9, 180.0], [55.0, 232.0], [55.1, 232.0], [55.2, 232.0], [55.3, 232.0], [55.4, 232.0], [55.5, 232.0], [55.6, 232.0], [55.7, 232.0], [55.8, 232.0], [55.9, 232.0], [56.0, 232.0], [56.1, 232.0], [56.2, 232.0], [56.3, 256.0], [56.4, 256.0], [56.5, 256.0], [56.6, 256.0], [56.7, 256.0], [56.8, 256.0], [56.9, 256.0], [57.0, 256.0], [57.1, 256.0], [57.2, 256.0], [57.3, 256.0], [57.4, 256.0], [57.5, 269.0], [57.6, 269.0], [57.7, 269.0], [57.8, 269.0], [57.9, 269.0], [58.0, 269.0], [58.1, 269.0], [58.2, 269.0], [58.3, 269.0], [58.4, 269.0], [58.5, 269.0], [58.6, 269.0], [58.7, 269.0], [58.8, 414.0], [58.9, 414.0], [59.0, 414.0], [59.1, 414.0], [59.2, 414.0], [59.3, 414.0], [59.4, 414.0], [59.5, 414.0], [59.6, 414.0], [59.7, 414.0], [59.8, 414.0], [59.9, 414.0], [60.0, 467.0], [60.1, 467.0], [60.2, 467.0], [60.3, 467.0], [60.4, 467.0], [60.5, 467.0], [60.6, 467.0], [60.7, 467.0], [60.8, 467.0], [60.9, 467.0], [61.0, 467.0], [61.1, 467.0], [61.2, 467.0], [61.3, 520.0], [61.4, 520.0], [61.5, 520.0], [61.6, 520.0], [61.7, 520.0], [61.8, 520.0], [61.9, 520.0], [62.0, 520.0], [62.1, 520.0], [62.2, 520.0], [62.3, 520.0], [62.4, 520.0], [62.5, 557.0], [62.6, 557.0], [62.7, 557.0], [62.8, 557.0], [62.9, 557.0], [63.0, 557.0], [63.1, 557.0], [63.2, 557.0], [63.3, 557.0], [63.4, 557.0], [63.5, 557.0], [63.6, 557.0], [63.7, 557.0], [63.8, 580.0], [63.9, 580.0], [64.0, 580.0], [64.1, 580.0], [64.2, 580.0], [64.3, 580.0], [64.4, 580.0], [64.5, 580.0], [64.6, 580.0], [64.7, 580.0], [64.8, 580.0], [64.9, 580.0], [65.0, 582.0], [65.1, 582.0], [65.2, 582.0], [65.3, 582.0], [65.4, 582.0], [65.5, 582.0], [65.6, 582.0], [65.7, 582.0], [65.8, 582.0], [65.9, 582.0], [66.0, 582.0], [66.1, 582.0], [66.2, 582.0], [66.3, 599.0], [66.4, 599.0], [66.5, 599.0], [66.6, 599.0], [66.7, 599.0], [66.8, 599.0], [66.9, 599.0], [67.0, 599.0], [67.1, 599.0], [67.2, 599.0], [67.3, 599.0], [67.4, 599.0], [67.5, 624.0], [67.6, 624.0], [67.7, 624.0], [67.8, 624.0], [67.9, 624.0], [68.0, 624.0], [68.1, 624.0], [68.2, 624.0], [68.3, 624.0], [68.4, 624.0], [68.5, 624.0], [68.6, 624.0], [68.7, 624.0], [68.8, 646.0], [68.9, 646.0], [69.0, 646.0], [69.1, 646.0], [69.2, 646.0], [69.3, 646.0], [69.4, 646.0], [69.5, 646.0], [69.6, 646.0], [69.7, 646.0], [69.8, 646.0], [69.9, 646.0], [70.0, 704.0], [70.1, 704.0], [70.2, 704.0], [70.3, 704.0], [70.4, 704.0], [70.5, 704.0], [70.6, 704.0], [70.7, 704.0], [70.8, 704.0], [70.9, 704.0], [71.0, 704.0], [71.1, 704.0], [71.2, 704.0], [71.3, 727.0], [71.4, 727.0], [71.5, 727.0], [71.6, 727.0], [71.7, 727.0], [71.8, 727.0], [71.9, 727.0], [72.0, 727.0], [72.1, 727.0], [72.2, 727.0], [72.3, 727.0], [72.4, 727.0], [72.5, 800.0], [72.6, 800.0], [72.7, 800.0], [72.8, 800.0], [72.9, 800.0], [73.0, 800.0], [73.1, 800.0], [73.2, 800.0], [73.3, 800.0], [73.4, 800.0], [73.5, 800.0], [73.6, 800.0], [73.7, 800.0], [73.8, 899.0], [73.9, 899.0], [74.0, 899.0], [74.1, 899.0], [74.2, 899.0], [74.3, 899.0], [74.4, 899.0], [74.5, 899.0], [74.6, 899.0], [74.7, 899.0], [74.8, 899.0], [74.9, 899.0], [75.0, 994.0], [75.1, 994.0], [75.2, 994.0], [75.3, 994.0], [75.4, 994.0], [75.5, 994.0], [75.6, 994.0], [75.7, 994.0], [75.8, 994.0], [75.9, 994.0], [76.0, 994.0], [76.1, 994.0], [76.2, 994.0], [76.3, 1006.0], [76.4, 1006.0], [76.5, 1006.0], [76.6, 1006.0], [76.7, 1006.0], [76.8, 1006.0], [76.9, 1006.0], [77.0, 1006.0], [77.1, 1006.0], [77.2, 1006.0], [77.3, 1006.0], [77.4, 1006.0], [77.5, 1146.0], [77.6, 1146.0], [77.7, 1146.0], [77.8, 1146.0], [77.9, 1146.0], [78.0, 1146.0], [78.1, 1146.0], [78.2, 1146.0], [78.3, 1146.0], [78.4, 1146.0], [78.5, 1146.0], [78.6, 1146.0], [78.7, 1146.0], [78.8, 1382.0], [78.9, 1382.0], [79.0, 1382.0], [79.1, 1382.0], [79.2, 1382.0], [79.3, 1382.0], [79.4, 1382.0], [79.5, 1382.0], [79.6, 1382.0], [79.7, 1382.0], [79.8, 1382.0], [79.9, 1382.0], [80.0, 1489.0], [80.1, 1489.0], [80.2, 1489.0], [80.3, 1489.0], [80.4, 1489.0], [80.5, 1489.0], [80.6, 1489.0], [80.7, 1489.0], [80.8, 1489.0], [80.9, 1489.0], [81.0, 1489.0], [81.1, 1489.0], [81.2, 1489.0], [81.3, 1756.0], [81.4, 1756.0], [81.5, 1756.0], [81.6, 1756.0], [81.7, 1756.0], [81.8, 1756.0], [81.9, 1756.0], [82.0, 1756.0], [82.1, 1756.0], [82.2, 1756.0], [82.3, 1756.0], [82.4, 1756.0], [82.5, 1939.0], [82.6, 1939.0], [82.7, 1939.0], [82.8, 1939.0], [82.9, 1939.0], [83.0, 1939.0], [83.1, 1939.0], [83.2, 1939.0], [83.3, 1939.0], [83.4, 1939.0], [83.5, 1939.0], [83.6, 1939.0], [83.7, 1939.0], [83.8, 1944.0], [83.9, 1944.0], [84.0, 1944.0], [84.1, 1944.0], [84.2, 1944.0], [84.3, 1944.0], [84.4, 1944.0], [84.5, 1944.0], [84.6, 1944.0], [84.7, 1944.0], [84.8, 1944.0], [84.9, 1944.0], [85.0, 1947.0], [85.1, 1947.0], [85.2, 1947.0], [85.3, 1947.0], [85.4, 1947.0], [85.5, 1947.0], [85.6, 1947.0], [85.7, 1947.0], [85.8, 1947.0], [85.9, 1947.0], [86.0, 1947.0], [86.1, 1947.0], [86.2, 1947.0], [86.3, 2056.0], [86.4, 2056.0], [86.5, 2056.0], [86.6, 2056.0], [86.7, 2056.0], [86.8, 2056.0], [86.9, 2056.0], [87.0, 2056.0], [87.1, 2056.0], [87.2, 2056.0], [87.3, 2056.0], [87.4, 2056.0], [87.5, 2063.0], [87.6, 2063.0], [87.7, 2063.0], [87.8, 2063.0], [87.9, 2063.0], [88.0, 2063.0], [88.1, 2063.0], [88.2, 2063.0], [88.3, 2063.0], [88.4, 2063.0], [88.5, 2063.0], [88.6, 2063.0], [88.7, 2063.0], [88.8, 2178.0], [88.9, 2178.0], [89.0, 2178.0], [89.1, 2178.0], [89.2, 2178.0], [89.3, 2178.0], [89.4, 2178.0], [89.5, 2178.0], [89.6, 2178.0], [89.7, 2178.0], [89.8, 2178.0], [89.9, 2178.0], [90.0, 2535.0], [90.1, 2535.0], [90.2, 2535.0], [90.3, 2535.0], [90.4, 2535.0], [90.5, 2535.0], [90.6, 2535.0], [90.7, 2535.0], [90.8, 2535.0], [90.9, 2535.0], [91.0, 2535.0], [91.1, 2535.0], [91.2, 2535.0], [91.3, 2806.0], [91.4, 2806.0], [91.5, 2806.0], [91.6, 2806.0], [91.7, 2806.0], [91.8, 2806.0], [91.9, 2806.0], [92.0, 2806.0], [92.1, 2806.0], [92.2, 2806.0], [92.3, 2806.0], [92.4, 2806.0], [92.5, 3215.0], [92.6, 3215.0], [92.7, 3215.0], [92.8, 3215.0], [92.9, 3215.0], [93.0, 3215.0], [93.1, 3215.0], [93.2, 3215.0], [93.3, 3215.0], [93.4, 3215.0], [93.5, 3215.0], [93.6, 3215.0], [93.7, 3215.0], [93.8, 3274.0], [93.9, 3274.0], [94.0, 3274.0], [94.1, 3274.0], [94.2, 3274.0], [94.3, 3274.0], [94.4, 3274.0], [94.5, 3274.0], [94.6, 3274.0], [94.7, 3274.0], [94.8, 3274.0], [94.9, 3274.0], [95.0, 3498.0], [95.1, 3498.0], [95.2, 3498.0], [95.3, 3498.0], [95.4, 3498.0], [95.5, 3498.0], [95.6, 3498.0], [95.7, 3498.0], [95.8, 3498.0], [95.9, 3498.0], [96.0, 3498.0], [96.1, 3498.0], [96.2, 3498.0], [96.3, 4119.0], [96.4, 4119.0], [96.5, 4119.0], [96.6, 4119.0], [96.7, 4119.0], [96.8, 4119.0], [96.9, 4119.0], [97.0, 4119.0], [97.1, 4119.0], [97.2, 4119.0], [97.3, 4119.0], [97.4, 4119.0], [97.5, 4147.0], [97.6, 4147.0], [97.7, 4147.0], [97.8, 4147.0], [97.9, 4147.0], [98.0, 4147.0], [98.1, 4147.0], [98.2, 4147.0], [98.3, 4147.0], [98.4, 4147.0], [98.5, 4147.0], [98.6, 4147.0], [98.7, 4147.0], [98.8, 7697.0], [98.9, 7697.0], [99.0, 7697.0], [99.1, 7697.0], [99.2, 7697.0], [99.3, 7697.0], [99.4, 7697.0], [99.5, 7697.0], [99.6, 7697.0], [99.7, 7697.0], [99.8, 7697.0], [99.9, 7697.0]], "isOverall": false, "label": "Q6", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 68.0, "series": [{"data": [[0.0, 16.0], [500.0, 68.0], [1000.0, 16.0]], "isOverall": false, "label": "Q1", "isController": false}, {"data": [[0.0, 5.0], [500.0, 18.0], [1000.0, 17.0]], "isOverall": false, "label": "Q2", "isController": false}, {"data": [[0.0, 64.0], [1500.0, 3.0], [1000.0, 7.0], [2000.0, 3.0], [500.0, 22.0], [4000.0, 1.0]], "isOverall": false, "label": "Q3", "isController": false}, {"data": [[0.0, 8.0], [2500.0, 5.0], [1500.0, 1.0], [3000.0, 3.0], [500.0, 7.0], [1000.0, 10.0], [2000.0, 6.0]], "isOverall": false, "label": "Q4", "isController": false}, {"data": [[0.0, 3.0], [2500.0, 8.0], [1500.0, 7.0], [3000.0, 2.0], [500.0, 2.0], [1000.0, 5.0], [2000.0, 12.0], [4000.0, 1.0]], "isOverall": false, "label": "Q5", "isController": false}, {"data": [[0.0, 49.0], [2500.0, 2.0], [1500.0, 4.0], [3000.0, 3.0], [7500.0, 1.0], [4000.0, 2.0], [2000.0, 3.0], [1000.0, 4.0], [500.0, 12.0]], "isOverall": false, "label": "Q6", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 7500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 67.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 187.0, "series": [{"data": [[1.0, 187.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 67.0]], "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [[0.0, 146.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.802499999999995, "minX": 1.48190538E12, "maxY": 18.802499999999995, "series": [{"data": [[1.48190538E12, 18.802499999999995]], "isOverall": false, "label": "n=20 t=1s", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.48190538E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 31.0, "minX": 1.0, "maxY": 2097.5897435897436, "series": [{"data": [[8.0, 135.0], [9.0, 111.0], [10.0, 106.0], [12.0, 168.5], [13.0, 297.0], [14.0, 547.0], [15.0, 686.5], [16.0, 689.0], [17.0, 569.0], [18.0, 528.0], [19.0, 570.6666666666666], [20.0, 851.5789473684212], [6.0, 308.0], [7.0, 121.0]], "isOverall": false, "label": "Q1", "isController": false}, {"data": [[18.49, 744.0500000000002]], "isOverall": false, "label": "Q1-Aggregated", "isController": false}, {"data": [[20.0, 894.45]], "isOverall": false, "label": "Q2", "isController": false}, {"data": [[20.0, 894.45]], "isOverall": false, "label": "Q2-Aggregated", "isController": false}, {"data": [[20.0, 501.26000000000016]], "isOverall": false, "label": "Q3", "isController": false}, {"data": [[20.0, 501.26000000000016]], "isOverall": false, "label": "Q3-Aggregated", "isController": false}, {"data": [[20.0, 1450.9750000000001]], "isOverall": false, "label": "Q4", "isController": false}, {"data": [[20.0, 1450.9750000000001]], "isOverall": false, "label": "Q4-Aggregated", "isController": false}, {"data": [[19.0, 290.0], [20.0, 2097.5897435897436]], "isOverall": false, "label": "Q5", "isController": false}, {"data": [[19.975, 2052.4]], "isOverall": false, "label": "Q5-Aggregated", "isController": false}, {"data": [[8.0, 97.0], [2.0, 31.0], [9.0, 83.5], [10.0, 49.0], [11.0, 40.0], [12.0, 44.0], [3.0, 67.0], [13.0, 48.0], [14.0, 49.0], [15.0, 48.75], [16.0, 148.85714285714286], [4.0, 53.0], [1.0, 36.5], [17.0, 195.0], [18.0, 98.0], [19.0, 190.33333333333334], [20.0, 1412.7380952380956], [5.0, 37.5], [6.0, 33.5], [7.0, 94.5]], "isOverall": false, "label": "Q6", "isController": false}, {"data": [[15.912500000000001, 785.2125000000001]], "isOverall": false, "label": "Q6-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 20.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1425.0, "minX": 1.48190538E12, "maxY": 448688.5333333333, "series": [{"data": [[1.48190538E12, 448688.5333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.48190538E12, 1425.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.48190538E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 501.26000000000016, "minX": 1.48190538E12, "maxY": 2052.4, "series": [{"data": [[1.48190538E12, 744.0500000000002]], "isOverall": false, "label": "Q1", "isController": false}, {"data": [[1.48190538E12, 894.45]], "isOverall": false, "label": "Q2", "isController": false}, {"data": [[1.48190538E12, 501.26000000000016]], "isOverall": false, "label": "Q3", "isController": false}, {"data": [[1.48190538E12, 1450.9750000000001]], "isOverall": false, "label": "Q4", "isController": false}, {"data": [[1.48190538E12, 2052.4]], "isOverall": false, "label": "Q5", "isController": false}, {"data": [[1.48190538E12, 785.2125000000001]], "isOverall": false, "label": "Q6", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.48190538E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 494.70000000000005, "minX": 1.48190538E12, "maxY": 2052.274999999999, "series": [{"data": [[1.48190538E12, 743.9800000000001]], "isOverall": false, "label": "Q1", "isController": false}, {"data": [[1.48190538E12, 875.3750000000001]], "isOverall": false, "label": "Q2", "isController": false}, {"data": [[1.48190538E12, 494.70000000000005]], "isOverall": false, "label": "Q3", "isController": false}, {"data": [[1.48190538E12, 1431.7000000000005]], "isOverall": false, "label": "Q4", "isController": false}, {"data": [[1.48190538E12, 2052.274999999999]], "isOverall": false, "label": "Q5", "isController": false}, {"data": [[1.48190538E12, 764.1625]], "isOverall": false, "label": "Q6", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.48190538E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.52, "minX": 1.48190538E12, "maxY": 1.9400000000000004, "series": [{"data": [[1.48190538E12, 1.9400000000000004]], "isOverall": false, "label": "Q1", "isController": false}, {"data": [[1.48190538E12, 0.575]], "isOverall": false, "label": "Q2", "isController": false}, {"data": [[1.48190538E12, 0.52]], "isOverall": false, "label": "Q3", "isController": false}, {"data": [[1.48190538E12, 0.5499999999999999]], "isOverall": false, "label": "Q4", "isController": false}, {"data": [[1.48190538E12, 1.5999999999999999]], "isOverall": false, "label": "Q5", "isController": false}, {"data": [[1.48190538E12, 0.7374999999999998]], "isOverall": false, "label": "Q6", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.48190538E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.48190538E12, "maxY": 7697.0, "series": [{"data": [[1.48190538E12, 7697.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.48190538E12, 28.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.48190538E12, 2187.9000000000005]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.48190538E12, 4117.980000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.48190538E12, 2797.9499999999994]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.48190538E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 720.5, "minX": 400.0, "maxY": 720.5, "series": [{"data": [[400.0, 720.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 400.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 714.0, "minX": 400.0, "maxY": 714.0, "series": [{"data": [[400.0, 714.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 400.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.48190538E12, "maxY": 6.666666666666667, "series": [{"data": [[1.48190538E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.48190538E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.48190538E12, "maxY": 6.666666666666667, "series": [{"data": [[1.48190538E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.48190538E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6666666666666666, "minX": 1.48190538E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.48190538E12, 1.6666666666666667]], "isOverall": false, "label": "Q3-success", "isController": false}, {"data": [[1.48190538E12, 0.6666666666666666]], "isOverall": false, "label": "Q2-success", "isController": false}, {"data": [[1.48190538E12, 0.6666666666666666]], "isOverall": false, "label": "Q4-success", "isController": false}, {"data": [[1.48190538E12, 1.6666666666666667]], "isOverall": false, "label": "Q1-success", "isController": false}, {"data": [[1.48190538E12, 0.6666666666666666]], "isOverall": false, "label": "Q5-success", "isController": false}, {"data": [[1.48190538E12, 1.3333333333333333]], "isOverall": false, "label": "Q6-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.48190538E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
